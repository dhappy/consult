{"version":3,"sources":["w/MetaGame’s Builders/on/-3/♋/7/@/1/26/‒/1/78/js.jsx","w/MetaGame’s Builders/on/-3/♋/7/@/1/26/‒/1/78/cid.js"],"names":["timeFor","process","CERAMIC_URL","str","split","start","end","parseInt","undefined","id","startTime","Date","url","title","href","chapters"],"mappings":"wWAiBaA,GANXC,2IAAYC,YAMS,SAACC,GAAD,OACpBA,EAAS,WACR,MAAwBA,EAAIC,MAAM,KAAlC,iBAAOC,EAAP,KAAiBC,EAAjB,WACA,OAAyB,GAAlBC,SAASF,GAAcE,SAASD,GAF/B,QAIRE,IAISC,EAAK,oEACLC,EAAY,IAAIC,KAAK,4BACrBC,EAAG,+BC1BZ,kHD2BSC,EACX,qCACG,mCACD,mBAAGC,KAAK,mBAAR,yBACC,WACD,mBAAGA,KAAK,mBAAR,kBAISC,EAAW","file":"static/js/1.1fbdf7af.chunk.js","sourcesContent":["import CID from './cid'\n// import ThreeIdResolver from '@ceramicnetwork/3id-did-resolver'\n// import Ceramic from '@ceramicnetwork/http-client'\n// import { IDX } from '@ceramicstudio/idx'\n// import { DID } from 'dids'\n// import {\n//   ThreeIdConnect, EthereumAuthProvider,\n// } from '@3id/connect'\n// import ids from 'docIds.json'\n\nconst CERAMIC_URL = (\n  process.env.CERAMIC_URL\n  || 'http://localhost:7007'\n  || 'https://d12-a-ceramic.3boxlabs.com'\n)\n\n// ToDo: load from App.jsx\nexport const timeFor = (str) => (\n  (str) ? ((() => {\n    const [start, ...end] = str.split(':')\n    return parseInt(start) * 60 + parseInt(end)\n  })()) : (\n    undefined\n  )\n)\n\nexport const id = 'tip:w/MetaGame’s Builders/on/-3/♋/7/@/1/26/‒/1/78/'\nexport const startTime = new Date('2021-07-14T10:00:30-0400')\nexport const url = `https://ipfs.io/ipfs/${CID['/']}`\nexport const title = (\n  <>\n    {\"Builders' Align for the Week of \"}\n    <a href='//z13cdn.web.app'>-3/♋/6</a>\n    {\" ‒ \"}\n    <a href='//z13cdn.web.app'>0</a>\n  </>\n)\n\nexport const chapters = []\n// ;(async () => {\n//   const threeIdConnect = new ThreeIdConnect()\n//   const addresses = await window.ethereum.enable()\n//   const authProvider = new EthereumAuthProvider(\n//     window.ethereum, addresses[0]\n//   )\n//   await threeIdConnect.connect(authProvider)\n//   const ceramic = new Ceramic(CERAMIC_URL)\n//   const did = new DID({\n//     provider: threeIdConnect.getDidProvider(),\n//     resolver: ThreeIdResolver.getResolver(ceramic)\n//   })\n//   await did.authenticate()\n//   ceramic.setDID(did)\n\n//   const idx = new IDX({ ceramic })\n//   const chapters = await idx.get(ids.definitions.consult)\n\n//   console.info({ chapters })\n\n//   // let prev\n//   // for(let [time, info] of Object.entries(baseChapters)) {\n//   //   info.start = timeFor(time)\n//   //   if(prev) {\n//   //     prev.end = timeFor(time)\n//   //   }\n//   //   prev = info\n//   // }\n  \n//   return []\n// })()\n\n","export default {\n  '/': (\n    \"Qmajyj462Qr1gvAyEJxY7cEevjaxgDkACHz8JtdvReLfW7/2021-07-14@09:58:31.MetaGame Builders' Align.00:02:00‒.mp4\"\n  ),\n}"],"sourceRoot":""}