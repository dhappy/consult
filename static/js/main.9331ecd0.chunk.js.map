{"version":3,"sources":["ceramic.svg","images/planning.svg","images/gavel.svg","images/ticket.svg","images/speaker.svg","images/question mark.svg","images/left arrow.svg","images/discuss.svg","images/certification.svg","images/brick wall.svg","MarkedVideo.jsx","View.jsx","New.jsx","ListAvailable.jsx","App.jsx","index.jsx","w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/cid.js","w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js.jsx","utils.js","w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/cid.js","w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js.jsx","../src lazy /^/.//.*//js$/ groupOptions: {} namespace object"],"names":["icons","plan","decision","issue","presenter","previously","discussion","logistics","blocked","unknown","DEFAULT_DURATION","Math","pow","Video","chakra","colors","colorIds","colorFor","id","index","indexOf","push","length","newNode","obj","Object","assign","uuid","children","partition","visit","node","method","apply","parent","isSet","connect","root","stops","Array","isArray","rent","map","child","clone","Spans","count","hovered","setHovered","duration","startOffset","rest","raw","keys","idx","key","heightPercent","className","includes","label","title","top","height","position","_before","content","zIndex","opacity","left","bottom","right","bg","p","w","sx","onMouseEnter","ids","mouseOver","onMouseLeave","dup","splice","mouseOut","style","display","flexGrow","minWidth","to","minW","direction","TimeBox","props","whiteSpace","textAlign","lineHeight","m","px","Times","startsAt","time","endsAt","useMemo","Date","getTime","isNaN","ends","isoStringFor","date","tz","split","part","borderTop","borderBottom","onlyTime","setter","str","replace","call","NodeSettings","open","closeNodeSettings","replaceNode","initialRef","useRef","useState","setTitle","body","setBody","baseStartOffset","baseDuration","defaultEnd","timeFor","ifSet","stringFor","endOffset","baseEndOffset","setStartOffset","start","end","setDuration","sync","setEndOffset","replacement","fields","gen","entries","forEach","value","size","initialFocusRef","isOpen","onClose","as","onSubmit","evt","preventDefault","textOverflow","overflow","pb","isFitted","variant","mb","mt","ref","autoFocus","onChange","target","onKeyPress","stopPropagation","minH","placeholder","disabled","ml","fontWeight","onClick","toString","alignSelf","mx","colorScheme","type","Option","fontSize","_hover","WrapPartition","Events","insertChild","insertParent","seekTo","menuVisible","setMenuVisible","useDisclosure","openNodeSettings","onOpen","dur","timePercent","prefix","toLowerCase","icon","borderRadius","maxW","maxH","mr","src","alt","border","color","pt","a","linkTarget","insert","sibling","anchor","siblings","addPartition","addParallel","removeNode","val","toggleMenu","findById","result","VideoSettings","closeVideoSettings","info","setInfo","setStartsAt","source","setSource","port","setPort","localStorage","setItem","DateTime","current","align","justify","milliseconds","config","vid","setTime","setRaw","setStops","getItem","vidHeight","setVidHeight","openVideoSettings","match","startsWith","useEffect","fix","attr","siblingsOf","gparent","console","warn","total","i","pStart","pDur","generate","togglePause","paused","play","pause","window","addEventListener","removeEventListener","URLSearchParams","location","search","get","video","update","currentTime","set","outer","rawNode","Error","findIndex","slice","templateRows","templateColumns","rowSpan","colSpan","h","overflowY","self","pos","insertion","rawChild","controls","stripped","strip","metadata","blob","Blob","JSON","stringify","url","URL","createObjectURL","focus","error","CeramicLogo","transform","draggable","onDrag","y","clientY","getBoundingClientRect","innerHeight","useLocation","pathname","setFromObject","json","CERAMIC_URL","process","ceramic","Ceramic","TileDocument","load","tile","endsWith","regex","http","fetch","res","form","parse","name","area","ctrlKey","submit","MarkedVideo","IPFS_URL","REACT_APP_IPFS_URI","DEF","definitions","ConsultVideoIndex","NewVideoModal","setVideos","ipfs","toISOString","startTime","tabIndex","creating","setCreating","add","anchorless","_str","$1","videos","toUrl","create","schema","schemas","ConsultVideoMetadata","family","controllers","did","merge","pin","record","loadingText","isLoading","IDX","autopin","ipfsHTTPClient","remove","loadVideos","threeIdConnect","ThreeIdConnect","ethereum","enable","addresses","authProvider","EthereumAuthProvider","DID","provider","getDidProvider","resolver","ThreeIdResolver","getResolver","authenticate","Promise","all","V1","V2","metas","fromEntries","Delete","docs","setDocs","ethers","providers","JsonRpcProvider","ensProvider","contract","Contract","address","abi","events","useCallback","filter","filters","CAIP_10","queryFilter","addrs","Set","args","caip10","Caip10Link","fromAccount","caip","ceramicIds","eth","lookupAddress","ens","addr","flat","exact","path","component","New","View","ListAvailable","ReactDOM","render","StrictMode","App","document","getElementById","speakers","Boolean","def","default","reverse","secondsStr","minutesStr","hoursStr","parseFloat","parseInt","minutes","sign","hours","floor","abs","seconds","mss","reduce","acc","num","toFixed","msStr","padStart","opts","tzo","getTimezoneOffset","dif","pad","norm","dateSeparator","sep","ret","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tzMinutes","tags","webpackAsyncContext","req","__webpack_require__","o","resolve","then","e","code","module","exports"],"mappings":"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","file":"static/js/main.9331ecd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ceramic.0ee77a5c.svg\";","export default __webpack_public_path__ + \"static/media/planning.94b7dbe6.svg\";","export default __webpack_public_path__ + \"static/media/gavel.5e85fdeb.svg\";","export default __webpack_public_path__ + \"static/media/ticket.469c9ef9.svg\";","export default __webpack_public_path__ + \"static/media/speaker.c8965534.svg\";","export default __webpack_public_path__ + \"static/media/question mark.fd3be730.svg\";","export default __webpack_public_path__ + \"static/media/left arrow.80561781.svg\";","export default __webpack_public_path__ + \"static/media/discuss.ca24625e.svg\";","export default __webpack_public_path__ + \"static/media/certification.7ec73e3d.svg\";","export default __webpack_public_path__ + \"static/media/brick wall.aca43172.svg\";","import {\n  Box, Button, ButtonGroup, Flex, GridItem, Grid, Heading,\n  Stack, Spacer, Spinner, chakra, useDisclosure, Input,\n  ModalOverlay, ModalContent, ModalHeader, ModalFooter,\n  ModalCloseButton, ModalBody, FormControl, FormLabel,\n  Modal, Text, Textarea, Divider, Image, Tooltip,\n  Tabs, TabList, TabPanels, Tab, TabPanel,\n} from '@chakra-ui/react'\nimport {\n  useEffect, useRef, useState, useMemo,\n} from 'react'\nimport Markdown from 'react-markdown'\nimport { v4 as uuid } from 'uuid'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport {\n  isoStringFor, stringFor, timeFor, isSet, ifSet,\n} from 'utils'\nimport CeramicLogo from './ceramic.svg'\n\nimport plan from './images/planning.svg'\nimport decision from './images/gavel.svg'\nimport issue from './images/ticket.svg'\nimport presenter from './images/speaker.svg'\nimport unknown from './images/question mark.svg'\nimport previously from './images/left arrow.svg'\nimport discussion from './images/discuss.svg'\nimport logistics from './images/certification.svg'\nimport blocked from './images/brick wall.svg'\n\nconst icons = {\n  plan, decision, issue, presenter, previously,\n  discussion, logistics, blocked, unknown,\n}\n\nconst DEFAULT_DURATION = Math.pow(60, 2)\nconst DEFAULT_VID_HEIGHT = 100\n\nconst Video = chakra('video')\n\nconst colors = [\n  'orange', 'red', 'green', 'purple', 'yellow',\n  'silver', 'blue', 'cyan', 'brown',\n  'black', 'white', 'coral', 'gray', 'pink',\n  'olive', 'orangered', 'teal', 'gold',\n]\n\nconst colorIds = []\nconst colorFor = (id) => {\n  let index = colorIds.indexOf(id)\n  if(index < 0) {\n    colorIds.push(id)\n    index = colorIds.length - 1\n  }\n  return colors[index % colors.length]\n}\n\nconst newNode = (obj = {}) => (\n  Object.assign(\n    { id: uuid(), children: [], partition: false },\n    obj,\n  )\n)\n\nconst visit = ({ node, method }) => {\n  let children = node?.children ?? []\n  children = method.apply(\n    node, [{ children, parent: node, visit }]\n  )\n  if(isSet(node.children)) {\n    node.children = children\n  }\n  return node\n}\n\nconst siblingsOf = (node) => {\n  const {\n    parent: { children: siblings } = { children: null }\n  } = node\n  return !node.parent ? [node] : siblings\n}\n\nconst connect = ({ stops }) => {\n  const parent = ({ children = [], parent: rent, visit }) => {\n    children = children.map((child) => {\n      child = visit({ node: newNode(child), method: parent })\n      child.parent = rent\n      return child\n    })\n    return children\n  }\n  let root = stops\n  if(Array.isArray(root)) {\n    root = { children: root }\n  }\n  return visit({ node: newNode(root), method: parent })\n}\n\nconst clone = (stops) => connect({ stops })\n\nconst generate = ({ root, duration, raw }) => {\n  const fix = ({ parent, children, visit }) => {\n    parent.raw = findById(raw, parent.id)\n\n    children.forEach((child) => {\n      ['duration', 'startOffset'].forEach((attr) => {\n        if (typeof child[attr] === 'string') {\n          child[attr] = timeFor(child[attr])\n        }\n      })\n    })\n\n    const siblings = siblingsOf(parent)\n    const index = siblings.indexOf(parent)\n    const gparent = parent.parent\n    if(\n      !isSet(parent.startOffset)\n      || isNaN(parent.startOffset)\n    ) {\n      if(gparent?.partition) {\n        if(index === 0) {\n          parent.startOffset = gparent.startOffset\n        } else if(index <= siblings.length - 1) {\n          parent.startOffset = (\n            siblings[index - 1].startOffset\n            + siblings[index - 1].duration\n          )\n        } else {\n          console.warn(\n            'Bad Index',\n            { index, parent, siblings },\n          )\n        }\n      } else if(gparent) {\n        parent.startOffset = gparent.startOffset\n      } else {\n        parent.startOffset = 0\n      }\n    }\n\n    if(\n      !isSet(parent.duration)\n      || isNaN(parent.duration)\n    ) {\n      if(gparent?.partition) {\n        if(index >= 0 && index < siblings.length - 1) {\n          const start = index\n          let end = start + 1\n          while(\n            end < siblings.length\n            && !isSet(siblings[end].startOffset)\n          ) {\n            end++\n          }\n          const total = (\n            (end === siblings.length ? (\n              gparent.startOffset + gparent.duration\n            ) : (\n              siblings[end].startOffset\n            ))\n            - siblings[start].startOffset\n          )\n          for(let i = start; i < end; i++) {\n            siblings[i].duration = (\n              total / (end - start)\n            )\n          }\n        } else if(index === siblings.length - 1) {\n          const {\n            startOffset: pStart, duration: pDur\n          } = gparent\n          parent.duration = (\n            (pStart + pDur) - parent.startOffset\n          )\n        } else {\n          console.warn(\n            'Bad Index',\n            { index, parent, siblings },\n          )\n        }\n      } else if(gparent) {\n        parent.duration = gparent.duration\n      } else {\n        parent.duration = duration\n      }\n    }\n  \n    if (!isSet(parent.startOffset)) {\n      console.warn(`No Starting Time`, { parent })\n    }\n    if (!isSet(parent.duration)) {\n      console.warn(`No Event Duration`, { parent })\n    }\n\n    return children.map((child) => (\n      visit({ node: child, method: fix })\n    ))\n  }\n\n  return visit({ node: clone(root), method: fix })\n}\n\nconst Spans = ({ node, count = 1, hovered, setHovered }) => {\n  if (!node) return null\n\n  const mouseOver = (node) => {\n    const ids = []\n    while(node) {\n      ids.push(node.id)\n      node = node.parent\n    }\n    setHovered(ids)\n  }\n  const mouseOut = (node) => {\n    setHovered((ids) => {\n      const dup = [...ids]\n      dup.splice(ids.indexOf(node.id), 1)\n      return dup\n    })\n  }\n\n  const {\n    id, children = [], startOffset,\n    duration, partition, raw, ...rest\n  } = node\n\n  if (Object.keys(rest).length === 0) {\n    return (\n      children.map((child, idx) => (\n        <Spans\n          {...{ duration, hovered, setHovered }}\n          key={idx}\n          node={child}\n          count={count + idx + 1}\n        />\n      ))\n    )\n  }\n\n  const timePercent = 0 //100 * startOffset / duration\n  const heightPercent = (\n    100 * duration / (node.parent?.duration ?? duration)\n  )\n  let className = 'span'\n  if(hovered.includes(node.id)) {\n    className += ' hovered'\n  }\n\n  return (\n    <Tooltip label={node.title}>\n      <Flex\n        top={`${timePercent}%`}\n        height={`${heightPercent}%`}\n        position=\"relative\"\n        _before={{\n          content: '\"\"', zIndex: -1,\n          position: 'absolute', opacity: 0.5,\n          top: 0, left: 0, bottom: 0, right: 0,\n          bg: colorFor(node.id),\n        }}\n        p={0} w=\"full\" {...{ className }}\n        sx={{\n          '&.hovered::before': { opacity: 1 }\n        }}\n        onMouseEnter={() => mouseOver(node)}\n        onMouseLeave={() => mouseOut(node)}\n      >\n        <Link\n          style={{\n            display: 'block',\n            flexGrow: 2,\n            minWidth: \"0.75em\",\n          }}\n          to={`#${node.id}`}\n        />\n        <Flex\n          flexGrow={0}\n          minW={node.children.length === 0 ? 0 : '1em'}\n          direction={node.partition ? 'column' : 'row'}\n        >\n          {node.children.map((child, idx) => (\n            <Spans\n              {...{ duration, hovered, setHovered }}\n              key={child.id} node={child}\n              count={count + idx + 1}\n            />\n          ))}\n        </Flex>\n        <Link\n          style={{\n            display: 'block',\n            flexGrow: 1,\n            minWidth: \"0.25em\",\n          }}\n          to={`#${node.id}`}\n        />\n      </Flex>\n    </Tooltip>\n  )\n}\n\nconst TimeBox = (({ children, ...props }) => (\n  <Box\n    whiteSpace=\"pre\" textAlign=\"center\"\n    lineHeight=\"1rem\" m=\"0 !important\"\n    px=\"0.1rem\" {...props}\n  >\n    {children}\n  </Box>\n))\n\nconst Times = ({\n  node, startsAt, duration, time,\n  hovered, setHovered, ...props\n}) => {\n  const endsAt = useMemo(() => (\n    new Date(startsAt.getTime() + duration * 1000)\n  ), [startsAt, duration])\n\n  if (!(endsAt instanceof Date) || isNaN(endsAt) || !node) {\n    return null\n  } else {\n    const ends = isoStringFor(\n      endsAt,\n      { date: false, tz: false },\n    )\n\n    return (\n      <Flex {...props}>\n        <Stack key=\"times\">\n          {\n            isoStringFor(startsAt).split('T')\n            .map((part, idx) => (\n              <TimeBox\n                key={idx}\n                borderTop={idx === 0 ? '2px dashed' : ''}\n              >\n                {part}\n              </TimeBox>\n            ))\n          }\n          <Spacer />\n          <TimeBox borderBottom=\"2px dashed\">\n            {ends}\n          </TimeBox>\n        </Stack>\n        <Flex>\n          <Spans {...{ node, hovered, setHovered }} />\n        </Flex>\n      </Flex>\n    )\n  }\n}\n\nconst onlyTime = ({ setter }) => (\n  (str) => {\n    str = (\n      str.replace(/[^0-9\\-−:.]/g, '')\n      .replace(/^(.+)[-−](.*)$/g, '$1$2')\n    )\n    setter.call(this, str)\n    return str\n  }\n)\n\nconst NodeSettings = ({\n  open, closeNodeSettings, node, replaceNode,\n}) => {\n  const { partition, children, raw } = node\n  const initialRef = useRef()\n  const [title, setTitle] = useState(node.title)\n  const [body, setBody] = useState(node.body)\n  const [startOffset, baseStartOffset] = (\n    useState(raw.startOffset ?? '')\n  )\n  const [duration, baseDuration] = (\n    useState(raw.duration ?? '')\n  )\n  const defaultEnd = (\n    timeFor(ifSet(startOffset) ?? node.startOffset)\n    + timeFor(ifSet(duration) ?? node.duration)\n  )\n  const [endOffset, baseEndOffset] = (\n    useState(\n      (isSet(startOffset) && isSet(duration)) ? (\n        stringFor(defaultEnd)\n      ) : (\n        ''\n      )\n    )\n  )\n  const setStartOffset = (str) => {\n    str = onlyTime({ setter: baseStartOffset })(str)\n    const start = (\n      timeFor(ifSet(str) ?? node.startOffset)\n    )\n    if(isSet(endOffset)) {\n      const end = timeFor(endOffset)\n      setDuration(\n        stringFor(end - start),\n        { sync: false },\n      )\n    } else if(isSet(duration)) {\n      const length = timeFor(duration)\n      setEndOffset(\n        stringFor(start + length),\n        { sync: false },\n      )\n    }\n  }\n  const setDuration = (str, { sync } = {}) => {\n    str = onlyTime({ setter: baseDuration })(str)\n    if(sync !== false && (isSet(endOffset) || isSet(startOffset))) {\n      const start = (\n        timeFor(ifSet(startOffset) ?? node.startOffset)\n      )\n      setEndOffset(\n        stringFor(start + timeFor(str)),\n        { sync: false },\n      )\n    }\n  }\n  const setEndOffset = (str, { sync } = {}) => {\n    str = onlyTime({ setter: baseEndOffset })(str)\n    if(\n      sync !== false\n      && (isSet(duration) || isSet(startOffset))\n    ) {\n      const start = (\n        timeFor(ifSet(startOffset) ?? node.startOffset)\n      )\n      const end = timeFor(str)\n      setDuration(\n        stringFor(end - start),\n        { sync: false },\n      )\n    }\n  }\n  const replacement = useMemo(() => {\n    const fields = {\n      title, body, duration, startOffset,\n      partition, children, id: node.id,\n    }\n    const gen = newNode()\n    Object.entries(fields).forEach(\n      ([key, value]) => {\n        if(isSet(value)) {\n          gen[key] = value\n        }\n      }\n    )\n    return gen\n  }, [\n    body, children, duration,\n    partition, startOffset, title,\n    node.id,\n  ])\n  const save = (evt) => {\n    evt.preventDefault()\n    replaceNode({ node, replacement })\n    closeNodeSettings()\n  }\n\n  return (\n    <Modal\n      size=\"xl\" initialFocusRef={initialRef}\n      {...{ isOpen: open, onClose: closeNodeSettings }}\n    >\n      <ModalOverlay/>\n      <ModalContent as=\"form\" onSubmit={save}>\n        <ModalHeader\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n        >Node: <q>{title}</q></ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody pb={6}>\n          <Tabs isFitted variant=\"enclosed\">\n            <TabList mb=\"1em\">\n              <Tab>Text</Tab>\n              <Tab>Timing</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <FormControl mt={4}>\n                  <FormLabel>Title</FormLabel>\n                  <Input\n                    ref={initialRef} value={title} autoFocus\n                    onChange={({ target: { value }}) => {\n                      setTitle(value)\n                    }}\n                    onKeyPress={(evt) => {\n                      evt.stopPropagation()\n                    }}\n                  />\n                </FormControl>\n                <FormControl mt={4}>\n                  <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                      <Tab>Body</Tab>\n                      <Tab>Preview</Tab>\n                    </TabList>\n                    <TabPanels>\n                      <TabPanel>\n                        <Textarea\n                          value={body} minH=\"5em\"\n                          placeholder=\"Markdown\"\n                          onChange={({ target: { value }}) => {\n                            setBody(value)\n                          }}\n                        />\n                      </TabPanel>\n                      <TabPanel>\n                        <Markdown>{body}</Markdown>\n                      </TabPanel>\n                    </TabPanels>\n                  </Tabs>\n                </FormControl>\n                <FormControl mt={4}>\n                  <FormLabel>ID</FormLabel>\n                  <Input\n                    value={node.id} disabled\n                  />\n                </FormControl>\n              </TabPanel>\n              <TabPanel>\n                <FormControl>\n                  <FormLabel>Start Offset</FormLabel>\n                  <Flex>\n                    <Input\n                      ref={initialRef} value={startOffset}\n                      placeholder={\n                        'automatic or HH:mm:ss.msms or mm:ss or ssss'\n                      }\n                      onChange={({ target: { value }}) => (\n                        setStartOffset(value)\n                      )}\n                    />\n                    {\n                      startOffset === '' && node.startOffset >= 0\n                      && ((() => {\n                        const time = stringFor(node.startOffset)\n                        return (\n                          <Button\n                            variant=\"outline\"\n                            p={2} ml={2} fontWeight=\"bold\"\n                            onClick={() => {\n                              setStartOffset(time)\n                            }}\n                            title={\n                              `Autocomplete with ${time}`\n                            }\n                          >←</Button>\n                        )\n                      })())\n                    }\n                  </Flex>\n                </FormControl>\n\n                <Flex>\n                  <FormControl mt={4}>\n                    <FormLabel>End Offset</FormLabel>\n                    <Flex>\n                      <Input\n                        placeholder=\"automatic\"\n                        value={endOffset}\n                        onChange={({ target: { value }}) => {\n                          setEndOffset(value)\n                        }}\n                      />\n                      {\n                        endOffset === '' && !!defaultEnd\n                        && ((() => {\n                          const time = stringFor(defaultEnd.toString())\n                          return (\n                            <Button\n                              variant=\"outline\"\n                              p={2} ml={2} fontWeight=\"bold\"\n                              onClick={() => {\n                                setEndOffset(time)\n                              }}\n                              title={\n                                `Autocomplete with ${time}`\n                              }\n                            >←</Button>\n                          )\n                        })())\n                      }\n                    </Flex>\n                  </FormControl>\n                  <Text alignSelf=\"end\" mb={2} mx={2}>or</Text>\n                  <FormControl mt={4}>\n                    <FormLabel>Duration</FormLabel>\n                    <Flex>\n                      <Input\n                        placeholder=\"automatic\"\n                        value={duration}\n                        onChange={({ target: { value }}) => (\n                          setDuration(value)\n                        )}\n                      />\n                      {\n                        !isSet(duration) && isSet(node.duration)\n                        && ((() => {\n                          const time = stringFor(node.duration.toString())\n                          return (\n                            <Button\n                              variant=\"outline\"\n                              p={2} ml={2} fontWeight=\"bold\"\n                              onClick={() => {\n                                setDuration(time)\n                              }}\n                              title={\n                                `Autocomplete with ${time}`\n                              }\n                            >←</Button>\n                          )\n                        })())\n                      }\n                    </Flex>\n                  </FormControl>\n                </Flex>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"red\"\n            onClick={closeNodeSettings}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\" ml={3}\n          >Save</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst Option = ({ children, onClick, ...props }) => {\n  const clicked = (evt) => {\n    evt.stopPropagation()\n    onClick(evt)\n  }\n  return (\n    <Button\n      {...props}\n      fontWeight=\"normal\" variant=\"outline\" mt={1.25}\n      fontSize={15} p={1} _hover={{ bg: '#00000077' }}\n      onClick={onClick ? clicked : null}\n    >{children}</Button>\n  )\n}\n\nconst WrapPartition = ({ children, node }) => {\n  if(node.partition) {\n    const id = `${node.id}-wrap`\n    return (\n      <Box\n        {...{ id }}\n        px={2}\n        position=\"relative\"\n        _before={{\n          content: '\"\"', zIndex: -1,\n          position: 'absolute', opacity: 0.5,\n          top: 0, left: 0, bottom: 0, right: 0,\n          bg: colorFor(id),\n        }}\n      >\n        {children}\n      </Box>\n    )\n  }\n  return children\n}\n\nconst Events = ({\n  node = {}, insertChild, replaceNode, insertParent,\n  duration, count = 1, hovered, setHovered, seekTo,\n  index = 0, ...props\n}) => {\n  const [menuVisible, setMenuVisible] = (\n    useState(false)\n  )\n  const {\n    isOpen: open,\n    onOpen: openNodeSettings,\n    onClose: closeNodeSettings,\n  } = useDisclosure()\n\n  if (!node) return null\n\n  const toggleMenu = (value = null) => {\n    if(value !== null) {\n      setMenuVisible(value)\n    } else {\n      setMenuVisible((val) => !val)\n    }\n  }\n\n  const addChild = (parent) => {\n    insertChild(\n      { parent, insert: { title: 'new' } }\n    )\n  }\n  const addPartition = (sibling) => {\n    const { parent } = sibling\n    if(!parent.partition) {\n      insertParent({\n        child: sibling,\n        insert: { partition: true },\n        siblings: [newNode({ title: 'part' })],\n      })\n    } else {\n      insertChild({\n        parent, insert: { title: 'new' }, anchor: sibling\n      })\n    }\n  }\n  const addParallel = (sibling) => {\n    let { parent } = sibling\n    while(parent.partition && parent.parent) {\n      sibling = parent\n      parent = parent.parent\n    }\n    insertChild({\n      parent, insert: { title: 'para' }, anchor: sibling\n    })\n  }\n  const removeNode = (node) => {\n    replaceNode({ node })\n  }\n\n  const mouseOver = (node) => {\n    const ids = []\n    while(node) {\n      ids.push(node.id)\n      node = node.parent\n    } \n    setHovered(ids)\n  }\n  const mouseOut = (node) => {\n    setHovered((ids) => {\n      const dup = [...ids]\n      dup.splice(ids.indexOf(node.id), 1)\n      return dup\n    })\n  }\n\n  const edit = (node) => {\n    openNodeSettings()\n  }\n\n  const {\n    id, children = [], startOffset,\n    duration: dur, partition, raw, ...rest\n  } = node\n\n  if (Object.keys(rest).length === 0) {\n    return (\n      children.map((child, index) => {\n        return (\n        <Events\n          {...{\n            duration, insertChild,\n            insertParent, replaceNode,\n            hovered, setHovered,\n            seekTo, index,\n          }}\n          key={index}\n          node={child}\n          count={count + index}\n        />\n        )\n      })\n    )\n  }\n\n  const timePercent = 100 * startOffset / duration\n  const heightPercent = 100 * dur / duration\n  let className = 'event'\n  if(hovered.includes(node.id)) {\n    className += ' hovered'\n  }\n\n  const prefix = node.title?.replace(/:.*/g, '').toLowerCase()\n  let icon = icons[prefix]\n  if(!icon) {\n    icon = icons.unknown\n  }\n\n  return (\n    <>\n      <NodeSettings\n        {...{\n          closeNodeSettings, open,\n          node, replaceNode,\n        }}\n      />\n      <Stack\n        id={node.id}\n        top={`${timePercent}%`}\n        minH={`${heightPercent}%`}\n        position=\"relative\"\n        _before={{\n          content: '\"\"', zIndex: -1,\n          position: 'absolute', opacity: 0.5,\n          top: 0, left: 0, bottom: 0, right: 0,\n          bg: colorFor(node.id),\n        }}\n        mt={index === 0 ? 0 : 1.5} px={3} w=\"full\"\n        sx={{\n          '&.hovered::before': { opacity: 1 }\n        }}\n        onMouseEnter={() => mouseOver(node)}\n        onMouseLeave={() => mouseOut(node)}\n        onClick={(evt) => {\n          evt.stopPropagation()\n          seekTo(node.startOffset)\n        }}\n        {...props} {...{ className }}\n      >\n        {node.title && (\n          <Flex>\n            {icon && (\n              <Image\n                borderRadius=\"50%\" bg=\"#FFFFFF55\"\n                minW={10} maxW={10} minH={10} maxH={10}\n                p={0.5} mr={1}\n                src={icon} alt={prefix}\n                border=\"1px solid black\"\n              />\n            )}\n            <Heading\n              fontSize={32} color=\"white\" pt={1.5}\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n              title={node.title}\n              sx={{\n                a: { borderBottom: '2px dashed' },\n                'a:hover': { borderBottom: '2px solid' },\n              }}\n            >\n              <Markdown linkTarget=\"_blank\">\n                {node.title}\n              </Markdown>\n            </Heading>\n            <Spacer />\n            {menuVisible && (\n              <ButtonGroup>\n                <Option\n                  title=\"Edit This Node\"\n                  onClick={() => edit(node)}\n                >✏️</Option>\n                <Option\n                  title=\"Create A Child\"\n                  onClick={() => addChild(node)}\n                >█ → 🬠</Option>\n                <Option\n                  title=\"Create A Partition Sibling\"\n                  onClick={() => addPartition(node)}\n                >█ → 🮒</Option>\n                <Option\n                  title=\"Create A Parallel Sibling\"\n                  onClick={() => addParallel(node)}\n                >█ → 🮔</Option>\n                <Option\n                  title=\"Remove Node\"\n                  onClick={() => removeNode(node)}\n                >➖</Option>\n              </ButtonGroup>\n            )}\n            <Button\n              ml={3}\n              onClick={(evt) => {\n                evt.stopPropagation()\n                toggleMenu()\n              }}\n              title={menuVisible ? (\n                'Hide Node Options'\n              ) : (\n                'Show Node Options'\n              )}\n            >\n              {menuVisible ? <Text fontWeight=\"bold\">┆</Text> : '☰'}\n            </Button>\n          </Flex>\n        )}\n        {isSet(node.body) && (\n          <Box\n            sx={{\n               a: { borderBottom: 'dashed' },\n               'a:hover': { borderBottom: 'solid' },\n            }}\n          >\n            <Divider color=\"white\"/>\n            <Markdown linkTarget=\"_blank\">\n              {node.body}\n            </Markdown>\n          </Box>\n        )}\n        <WrapPartition {...{ node }}>\n          {node.children?.map((child, index) => (\n            <Events\n              {...{\n                duration, insertChild,\n                insertParent, replaceNode,\n                hovered, setHovered,\n                seekTo, index,\n              }}\n              key={index}\n              node={child}\n              count={count + index + 1}\n            />\n          ))}\n        </WrapPartition>\n      </Stack>\n    </>\n  )\n}\n\nconst findById = (root, id) => {\n  if(root.id === id) {\n    return root\n  }\n  for(const child of root.children) {\n    const result = findById(child, id)\n    if(result) {\n      return result\n    }\n  }\n}\n\nconst VideoSettings = ({\n  open, closeVideoSettings, info, setInfo,\n}) => {\n  if(!isSet(info.startsAt)) {\n    info.startsAt = new Date()\n  }\n  const [startsAt, setStartsAt] = useState(\n    isoStringFor(info.startsAt, { tz: false })\n  )\n  const [source, setSource] = (\n    useState(info.source)\n  )\n  const [port, setPort] = useState(info.port)\n\n  const save = (evt) => {\n    evt.preventDefault()\n    setInfo((info) => ({\n      ...info,\n      startsAt: new Date(startsAt),\n      source,\n      port,\n    }))\n    localStorage.setItem(\n      'consult.localhost.ipfs.gateway.port',\n      port,\n    )\n    closeVideoSettings()\n  }\n\n  return (\n    <Modal\n      size=\"xl\"\n      {...{ isOpen: open, onClose: closeVideoSettings }}\n    >\n      <ModalOverlay/>\n      <ModalContent as=\"form\" onSubmit={save}>\n        <ModalHeader\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n        >Video Settings</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody pb={6}>\n        <FormControl mt={4}>\n            <FormLabel>Start Time</FormLabel>\n            <Input\n              type=\"datetime-local\"\n              value={startsAt} autoFocus\n              onChange={({ target: { value }}) => {\n                setStartsAt(value)\n              }}\n            />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Video Source</FormLabel>\n            <Input\n              value={source}\n              onChange={({ target: { value }}) => {\n                setSource(value)\n              }}\n            />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Local IPFS Port</FormLabel>\n            <Input\n              value={port}\n              onChange={({ target: { value }}) => {\n                setPort(value)\n              }}\n            />\n          </FormControl>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"red\"\n            onClick={closeVideoSettings}\n          >Cancel</Button>\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\" ml={3}\n          >Save</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst DateTime = ({ startsAt, time }) => {\n  const current = (\n    new Date(startsAt.getTime() + time * 1000)\n  )\n  const opts = { date: false, tz: false }\n  return (\n    <Flex\n      direction=\"column\" lineHeight={1}\n      align=\"center\" justify=\"center\"\n    >\n      <Box>{isoStringFor(current, opts)}</Box>\n      <Box>\n        +{stringFor(time, { milliseconds: false })}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default (config) => {\n  const [duration, setDuration] = (\n    useState(DEFAULT_DURATION)\n  )\n  const vid = useRef()\n  const [time, setTime] = useState(0)\n  const [raw, setRaw] = useState(\n    connect({ stops: config.stops })\n  )\n  const [stops, setStops] = useState()\n  const [hovered, setHovered] = useState([])\n  const [info, setInfo] = useState({\n    startsAt: config.startsAt,\n    source: config.source,\n    port: (\n      localStorage.getItem(\n        'consult.localhost.ipfs.gateway.port'\n      )\n      ?? '8080'\n    ),\n  })\n  const { startsAt, source, port } = info\n  const [vidHeight, setVidHeight] = (\n    useState(DEFAULT_VID_HEIGHT)\n  )\n  const {\n    isOpen: open,\n    onOpen: openVideoSettings,\n    onClose: closeVideoSettings,\n  } = useDisclosure()\n  const src = useMemo(() => {\n    const regex = /^ipfs:(\\/\\/)?(([^/]+)\\/?(.*))$/i\n    const match = source.match(regex)\n    if(match) {\n      if(\n        match[3].startsWith('bafybei')\n        && isSet(port)\n      ) {\n        return (\n          `http://${match[3]}.ipfs.localhost:${port}`\n          + `/${match[4]}`\n        )\n      }\n      return `//ipfs.io/ipfs/${match[2]}`\n    }\n    return source\n  }, [source, port])\n\n  useEffect(() => {\n    const stops = generate({ root: raw, duration, raw })\n    setStops(stops)\n  }, [raw, duration])\n\n  useEffect(() => {\n    const togglePause = (evt) => {\n      switch(evt.key) {\n        case 'p': case 'P':\n          if(vid.current.paused) {\n            vid.current.play()\n          } else {\n            vid.current.pause()\n          }\n        break\n        case 'b':\n          seekTo(time - 5)\n        break\n        case 'B':\n          seekTo(time - 20)\n        break\n        case 'f':\n          seekTo(time + 5)\n        break\n        case 'F':\n          seekTo(time + 20)\n        break\n        default:\n        break\n      }\n    }\n    window.addEventListener('keypress', togglePause)\n    return () => {\n      window.removeEventListener('keypress', togglePause)\n    }\n  })\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search)\n    const chapterIdx = params.get('chapter')\n    if (chapterIdx) {\n      seekTo(\n        // chapters[parseInt(chapterIdx)].start\n      )\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const video = vid.current\n    const update = ({ target: { currentTime: time }}) => {\n      setTime(time)\n    }\n    video.addEventListener('timeupdate', update)\n    return () => {\n      video.removeEventListener('timeupdate', update)\n    }\n  }, [setTime])\n\n  useEffect(() => {\n    const video = vid.current\n    const set = () => setDuration(video.duration)\n    video.addEventListener('loadedmetadata', set)\n    return () => {\n      video.removeEventListener('loadedmetadata', set)\n    }\n  }, [])\n\n  const insertChild = ({ parent, insert, anchor }) => {\n    const self = { ...findById(raw, parent.id) }\n    insert = newNode(insert)\n    insert.parent = self\n    const { children } = parent\n    const pos = (\n      anchor ? children.indexOf(anchor) : children.length\n    )\n    self.children = [\n      ...self.children.slice(0, pos + 1),\n      insert,\n      ...self.children.slice(pos + 1),\n    ]\n    const insertion = ({ children, visit }) => (\n      children.map((child) => {\n        visit({ node: child, method: insertion })\n        return child.id === self.id ? self : child\n      })\n    )\n    setRaw((raw) => {\n      return visit({ node: clone(raw), method: insertion })\n    })\n  }\n\n  const insertParent = ({ child, insert, siblings = [] }) => {\n    const rawChild = findById(raw, child.id)\n    insert.children = [rawChild, ...siblings]\n    replaceNode({\n      node: rawChild,\n      replacement: newNode(insert),\n    })\n    return insert\n  }\n\n  const replaceNode = ({ node, replacement = null }) => {\n    let outer = null\n    setRaw((raw) => {\n      const dup = outer = clone(raw)\n      const rawNode = findById(dup, node.id)\n\n      if(!rawNode) {\n        throw new Error(`Couldn't find node with id: ${node.id}`)\n      }\n\n      const { parent } = rawNode\n      const { children } = parent\n      const index = children.findIndex(\n        (child) => child.id === node.id\n      )\n      if(!replacement) {\n        children.splice(index, 1)\n      } else {\n        replacement.parent = parent\n        parent.children = [\n          ...children.slice(0, index),\n          replacement,\n          ...children.slice(index + 1),\n        ]\n      }\n      return dup\n    })\n    return outer\n  }\n\n  const seekTo = (time) => {\n    console.info('Seeking To', time)\n    vid.current.currentTime = time\n  }\n\n  const serialize = () => {\n    const strip = (\n      ({ parent, children, visit }) => {\n        delete parent.id\n        delete parent.parent\n        if(!parent.partition) {\n          delete parent.partition\n        }\n        if(children.length === 0) {\n          delete parent.children\n        }\n        delete parent.raw\n\n        return children.map((child) => (\n          visit({ node: child, method: strip })\n        ))\n      }\n    )\n    const stripped = (\n      visit({ node: clone(raw), method: strip })\n    )\n    const metadata = {\n      video: info,\n      stops: stripped,\n    }\n    try {\n      const blob = new Blob(\n        [JSON.stringify(metadata, null, 2)],\n        { type: \"text/json\" },\n      )\n      const url = window.URL.createObjectURL(blob)\n      window.open(url, '_blank').focus()\n    } catch(error) {\n      console.error({ error })\n    }\n  }\n\n  const upload = () => {\n  }\n\n  return (\n    <>\n      <VideoSettings {...{\n        open, closeVideoSettings, info, setInfo,\n      }}/>\n      <Grid\n        as=\"form\"\n        templateRows=\"1fr 0fr\"\n        templateColumns=\"0fr 1fr\"\n        maxH=\"100vh\"\n      >\n        {!stops ? (\n          <GridItem id=\"spinner\" rowSpan={1} colSpan={2}>\n            <Spinner />\n          </GridItem>\n        ) : (\n          <>\n            <GridItem id=\"spans\" rowSpan={1} colSpan={1}>\n              <Times\n                {...{\n                  startsAt, duration, time,\n                  hovered, setHovered,\n                }}\n                node={stops}\n                h={`calc(100vh - ${vidHeight}px)`}\n              />\n            </GridItem>\n            <GridItem\n              id=\"events\" rowSpan={1} colSpan={1}\n              overflowY=\"scroll\"\n            >\n              <Events\n                {...{\n                  insertChild, insertParent,\n                  duration, replaceNode,\n                  hovered, setHovered,\n                  seekTo,\n                }}\n                node={stops}\n              />\n            </GridItem>\n          </>\n        )}\n        <GridItem\n          id=\"video\"\n          rowSpan={1} colSpan={2}\n          maxH={vidHeight} maxW=\"100vw\"\n        >\n          <Flex maxH=\"100%\" maxW=\"100vw\">\n            <DateTime {...{ startsAt, time }}/>\n            <Video\n              flexGrow={1} controls\n              maxH=\"100%\" maxW=\"calc(100vw - 10em)\"\n              ref={vid}\n            >\n              <source {...{ src, type: 'video/mp4' }} />\n              {/* {VTT && <track default src={VTT}/>} */}\n            </Video>\n            <Flex align=\"center\">\n              <Stack>\n                <Button\n                  title=\"Edit the video information\"\n                  onClick={openVideoSettings}\n                  h=\"auto\"\n                >⚙</Button>\n                <Button\n                  title=\"Download the current configuration\"\n                  onClick={serialize}\n                  h=\"auto\"\n                >⭳</Button>\n              </Stack>\n              <Button\n                title=\"Upload to Ceramic\"\n                onClick={upload}\n              >\n                <Image\n                  minH={25} minW={25}\n                  src={CeramicLogo}\n                />\n              </Button>\n            </Flex>\n          </Flex>\n        </GridItem>\n      </Grid>\n      <Button\n        position=\"absolute\"\n        left=\"50%\" bottom={vidHeight}\n        transform=\"translate(-50%, 50%)\"\n        draggable={true} variant=\"outline\"\n        onDrag={({ clientY: y, target, type }) => {\n          const { height } = (\n            target.getBoundingClientRect()\n          )\n          if(y > 0) { // an event w/ y = 0 fires at the end\n            if(y <= window.innerHeight - DEFAULT_VID_HEIGHT) {\n              setVidHeight(window.innerHeight - y)\n            }\n          }\n        }}\n      >⇅</Button>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport {\n  Heading, Spinner, Stack, UnorderedList, ListItem,\n  Flex, Textarea, Button,\n} from '@chakra-ui/react'\nimport { useLocation } from 'react-router'\nimport MarkedVideo from 'MarkedVideo'\nimport { HashLink as Link } from 'react-router-hash-link'\n\nexport default () => {\n  const { pathname: path } = useLocation()\n  const metadata = path.replace(/^\\/?(.+?)\\/?$/, '$1')\n  const [info, setInfo] = useState(null)\n\n  const setFromObject = (json) => {\n    const { video: { startsAt, source }, stops } = (\n      json\n    )\n    setInfo({\n      startsAt: new Date(startsAt), source, stops\n    })\n  }\n\n  useEffect(() => {\n    console.info({ metadata });\n    (async () => {\n      if(metadata.startsWith('ceramic://')) {\n        const CERAMIC_URL = (\n          process.env.CERAMIC_URL\n          || 'http://localhost:7007'\n          || 'https://ceramic-clay.3boxlabs.com'\n        )\n        const ceramic = new Ceramic(CERAMIC_URL)\n        const tile = await (\n          TileDocument.load(ceramic, metadata)\n        )\n        console.info({ metadata, tile: tile.content })\n        setInfo(tile.content)\n      } else if(metadata.startsWith('ipfs://')) {\n        if(metadata.endsWith('.mp4')) {\n          setInfo({\n            startsAt: new Date(),\n            stops: [{\n              title: 'Title',\n            }],\n            source: metadata,\n          })\n        } else if(metadata.endsWith('.json')) {\n          const regex = /^ipfs:(\\/\\/)?(.+)$/i\n          const match = metadata.match(regex)\n          const http = `//ipfs.io/ipfs/${match[2]}`\n          const res = await fetch(http)\n          setFromObject(await res.json())\n        }\n      } else if(metadata !== '/') {\n        setInfo(await import(`./${metadata}/js`))\n      } else {\n        console.warn('No files to load…')\n      }\n    })()\n  }, [metadata])\n\n  if(!info) {\n    return (\n      <Stack align=\"center\" mt={10}>\n        {metadata === '/' ? (\n          <UnorderedList\n            sx={{\n              a: { borderBottom: '2px dashed' },\n              'a:hover': { borderBottom: '2px solid' },\n            }}\n          >\n            <ListItem>\n              <Link\n                to=\"ipfs://Qmeiz7YmwtVYMRSUG3VdKTxU634JTPaB5j2xLj5RREqAkG/2021⁄10⁄06@09:56:54.MetaGame’s%20Builders’%20Align.x264.mp4\"\n              >Builders’ Align Video</Link>\n            </ListItem>\n            <ListItem>\n              <Link\n                to=\"ipfs://QmRrVhS5KZ4372vSb48sv7xBThZvnLuv4jQpVmyfzkQpEP/Sample Builders’ Align.json\"\n              >Builders’ Align w/ Metadata</Link>\n            </ListItem>\n          </UnorderedList>\n        ) : (\n          <>\n            <Heading size=\"sm\">{metadata}</Heading>\n            <Spinner/>\n          </>\n        )}\n        <Flex\n          as=\"form\" direction=\"column\"\n          onSubmit={(evt) => {\n            console.info({ form: evt })\n            evt.preventDefault()\n            setFromObject(\n              JSON.parse(evt.target.json.value)\n            )\n          }}\n        >\n          <Textarea\n            name=\"json\" placeholder=\"JSON Events Description\"\n            w={600} h={30}\n            onKeyPress={(evt) => {\n              console.info({ area: evt })\n              if(evt.key === 'Enter' && evt.ctrlKey) {\n                evt.target.form.submit()\n              }\n            }}\n          ></Textarea>\n          <Button type=\"submit\">Load JSON</Button>\n        </Flex>\n      </Stack>\n    )\n  }\n\n  const { title, stops, source, startsAt } = info\n  return <MarkedVideo {...{\n    title, stops, source, startsAt,\n  }}/>\n}","import ThreeIdResolver from '@ceramicnetwork/3id-did-resolver'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { IDX } from '@ceramicstudio/idx'\nimport { DID } from 'dids'\nimport {\n  ThreeIdConnect, EthereumAuthProvider,\n} from '@3id/connect'\nimport {\n  Box, Button, Flex, FormControl, FormLabel, IconButton,\n  Input, ListItem, Modal, ModalBody, ModalCloseButton,\n  ModalContent, ModalFooter, ModalHeader, ModalOverlay,\n  Stack, Tab, TabList, TabPanel, TabPanels, Tabs,\n  UnorderedList, useDisclosure,\n} from '@chakra-ui/react'\nimport { DeleteIcon } from '@chakra-ui/icons'\nimport Markdown from 'react-markdown'\nimport { useEffect, useState, useMemo } from 'react'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { create as ipfsHTTPClient } from 'ipfs-http-client'\n\nimport ids from 'ceramicIds.json'\nimport V1 from 'w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js'\nimport V2 from 'w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js'\n\nconst CERAMIC_URL = (\n  process.env.CERAMIC_URL\n  || 'https://clay-ceramic.3boxlabs.com'\n  || 'http://localhost:7007'\n  || 'https://d12-a-ceramic.3boxlabs.com'\n)\nconst IPFS_URL = (\n  process.env.REACT_APP_IPFS_URI ?? '/ip4/127.0.0.1/tcp/5001'\n)\n\nconst DEF = ids.definitions.ConsultVideoIndex\n\nconst NewVideoModal = ({\n  isOpen, onClose, setVideos, ceramic, idx, ipfs,\n}) => {\n  const [startTime/*, setStartTime*/] = (\n    useState((new Date()).toISOString())\n  )\n  const [title/*, setTitle*/] = useState('')\n  const [url/*, setURL*/] = useState('')\n  const [tabIndex/*, setTabIndex*/] = useState(0)\n  const [creating, setCreating] = useState(null)\n\n  const video = async () => {\n    setCreating('Starting')\n    const video = { startTime, title }\n    if(tabIndex === 0) {\n      video.url = url\n    } else {\n      ipfs.add()\n    }\n    const anchorless = video.title.replace(\n      /\\[([^\\]]+)\\]\\([^)]+\\)/g, (_str, $1) => $1\n    )\n    const id = `${video.startTime}: ${anchorless}`\n    setCreating('Checking IDX for Index')\n    const videos = (await idx.get(DEF)) ?? {}\n    let tile\n    if(videos[id]) {\n      setCreating('Loading Existing Tile')\n      tile = await TileDocument.load(ceramic, videos[id])\n      console.info('Existing', tile.id.toUrl())\n    } else {\n      setCreating('Creating New Tile')\n      tile = (await TileDocument.create(\n        ceramic,\n        null,\n        {\n          schema: ids.schemas.ConsultVideoMetadata,\n          family: 'Consult Video',\n          controllers: [ceramic.did.id],\n        },\n      ))\n      console.info('created', tile.id.toUrl())\n      setCreating('Updating IDX Index')\n      const record = await (\n        idx.merge(DEF, { [id]: tile.id.toUrl() }, { pin: true })\n      )\n      console.info('added', record.toUrl())\n      videos[id] = tile.id.toUrl()\n      setVideos(Object.keys(videos))\n    }\n    setCreating('Updating Video Metadata')\n    await tile.update(video)\n    console.info('updated', id)\n    setCreating(null)\n  }\n\n  return (\n    <Modal {...{ isOpen, onClose }}>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader>New Video</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n        <FormControl>\n            <FormLabel>Title</FormLabel>\n            <Input/>\n          </FormControl>\n          <FormControl>\n            <FormLabel>Start Time</FormLabel>\n            <Input type=\"datetime-local\"/>\n          </FormControl>\n          <Tabs isFitted variant=\"enclosed\">\n            <TabList mb=\"1em\">\n              <Tab>URL</Tab>\n              <Tab>Upload</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <Input placeholder=\"ipfs://…\"/>\n              </TabPanel>\n              <TabPanel>\n                <Input type=\"file\"/>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"ghost\" onClick={onClose}>Cancel</Button>\n          <Button colorScheme=\"blue\" ml={3}>\n            Save\n          </Button>\n          <Button\n            w={72} loadingText={creating}\n            onClick={video}\n            isLoading={!!creating}\n            disabled={creating !== null}\n          />\n\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default () => {\n  const ceramic = useMemo(\n    () => new Ceramic(CERAMIC_URL), []\n  )\n  const idx = useEffect(\n    () => new IDX({ ceramic, autopin: true }),\n    [ceramic],\n  )\n  const ipfs = useMemo(\n    () => new ipfsHTTPClient(IPFS_URL), []\n  )\n  const [videos, setVideos] = useState([])\n  const { isOpen, /*onOpen,*/ onClose } = useDisclosure()\n  \n  // useEffect(() => {\n  //   (async () => {\n  //     const threeIdConnect = new ThreeIdConnect()\n  //     const addresses = await window.ethereum.enable()\n  //     const authProvider = new EthereumAuthProvider(\n  //       window.ethereum, addresses[0]\n  //     )\n  //     await threeIdConnect.connect(authProvider)\n  //     const did = new DID({\n  //       provider: threeIdConnect.getDidProvider(),\n  //       resolver: ThreeIdResolver.getResolver(ceramic)\n  //     })\n  //     await did.authenticate()\n  //     ceramic.did = did\n  //     console.info('DID', did.id)\n  //   })()\n  // }, [])\n\n  // useEffect(() => {\n  //   if(ceramic && idx) {\n  //     (async () => {\n  //       const videos = await idx.get(DEF)\n  //       console.info('SET VIDS', videos)\n  //       setVideos(Object.keys(videos))\n  //     })()\n  //   }\n  // }, [ceramic, idx, DEF])\n\n  const remove = async (id) => {\n    const videos = (await idx.get(DEF)) ?? {}\n    if(!videos[id]) {\n      console.warn('Removing Nonexistent Id', id)\n    }\n    delete videos[id]\n    console.info({ videos }, Object.keys(videos))\n    await idx.set(DEF, videos)\n    console.info('SET', [])\n    setVideos([])\n  }\n\n  const loadVideos = async () => {\n    const CERAMIC_URL = (\n      process.env.CERAMIC_URL\n      || 'http://localhost:7007'\n      || 'https://ceramic-clay.3boxlabs.com'\n    )\n    const ceramic = new Ceramic(CERAMIC_URL)\n    const idx = new IDX({ ceramic, autopin: true })\n    const threeIdConnect = new ThreeIdConnect()\n    const addresses = await window.ethereum.enable()\n    console.info('adrs', addresses)\n    const authProvider = new EthereumAuthProvider(\n      window.ethereum, addresses[0]\n    )\n    await threeIdConnect.connect(authProvider)\n    const did = new DID({\n      provider: threeIdConnect.getDidProvider(),\n      resolver: ThreeIdResolver.getResolver(ceramic),\n    })\n    await did.authenticate()\n    ceramic.did = did\n    console.info(ceramic.did.id)\n\n    const metas = Object.fromEntries(\n      await Promise.all(\n        [V1, V2].map(async (video) => {\n          const anchorless = video.title.replace(\n            /\\[([^\\]]+)\\]\\([^)]+\\)/g, (_str, $1) => $1\n          )\n          const id = `${video.startTime}: ${anchorless}`\n          const tile = (await TileDocument.create(\n            ceramic,\n            video,\n            {\n              schema: ids.schemas.ConsultVideoMetadata,\n              family: 'Consult Video',\n              controllers: [ceramic.did.id],\n            },\n          ))\n          return [id, tile.id.toUrl()]\n        })\n      )\n    )\n    idx.set(\n      ids.definitions.ConsultVideoIndex,\n      metas,\n    )\n    console.info(metas)\n  }\n\n  return (\n    <Box align=\"center\" mt={10}>\n      <Stack maxW=\"50rem\" align=\"center\">\n        <Button\n          w={72}\n          // onClick={onOpen}\n          onClick={loadVideos}\n          //disabled={!ceramic || !idx}\n        >\n          New Video\n        </Button>\n        <UnorderedList>\n          {videos.map((vid) => (\n            <ListItem key={vid}><Flex justify=\"center\">\n              <Markdown>{vid}</Markdown>\n              <IconButton\n                aria-label=\"Remove\" icon={<DeleteIcon/>}\n                size=\"sm\" ml={5} onClick={() => remove(vid)}\n              />\n            </Flex></ListItem>\n          ))}\n        </UnorderedList>\n      </Stack>\n      <NewVideoModal {...{\n        isOpen, onClose, ceramic, idx, ipfs,\n      }}/>\n    </Box>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Heading, ListItem, Spinner, Stack, UnorderedList } from \"@chakra-ui/react\";\nimport { ethers } from 'ethers'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { IDX } from '@ceramicstudio/idx'\nimport { DID } from 'dids'\nimport {\n  ThreeIdConnect, EthereumAuthProvider,\n} from '@3id/connect'\nimport ThreeIdResolver from '@ceramicnetwork/3id-did-resolver'\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link'\nimport info from 'contract/address.json'\nimport abi from 'contract/abi/IDXEndpointPublisher.json'\nimport ceramicIds from 'ceramicIds.json'\nimport { useEffect, useCallback, useMemo, useState } from 'react'\n\nexport default () => {\n  const [docs, setDocs] = useState(null)\n  const provider = useMemo(() => (\n    new ethers.providers.JsonRpcProvider(\n      'https://polygon-mumbai.infura.io/v3/7ba21f9ee8d2422da87d1c35bcead48b'\n    )),\n    []\n  )\n  const ensProvider = useMemo(() => (\n    new ethers.providers.JsonRpcProvider(\n      'https://mainnet.infura.io/v3/7ba21f9ee8d2422da87d1c35bcead48b'\n    )),\n    []\n  )\n  const contract = useMemo(() => (\n    new ethers.Contract(info.address, abi, provider)\n    ),\n    [provider]\n  )\n\n  const events = useCallback(async () => {\n    const [address] = await window.ethereum.enable()\n    const filter = contract.filters.CAIP_10()\n    const events = await contract.queryFilter(filter, -90000)\n    const addrs = [...new Set(\n      ...events.map(\n        ({ args: { caip10: addr } }) => addr\n      ),\n      [`eip155:1:${address}`],\n    )]\n\n    const CERAMIC_URL = (\n      process.env.CERAMIC_URL\n      || 'http://localhost:7007'\n      || 'https://ceramic-clay.3boxlabs.com'\n    )\n    const ceramic = new Ceramic(CERAMIC_URL)\n    const idx = new IDX({ ceramic, autopin: true })\n    const threeIdConnect = new ThreeIdConnect()\n    const authProvider = new EthereumAuthProvider(\n      window.ethereum, address\n    )\n    await threeIdConnect.connect(authProvider)\n    const did = new DID({\n      provider: threeIdConnect.getDidProvider(),\n      resolver: ThreeIdResolver.getResolver(ceramic),\n    })\n    await did.authenticate()\n    ceramic.did = did\n\n    console.info({ addrs, address })\n\n    const docs = await Promise.all(\n      addrs.map(async (caip10) => {\n        let id = caip10.toLowerCase()\n        const match = id.match(\n          /^(eip155):(\\d+):(.+)$/\n        )\n        if(match) {\n          id = `${match[3]}@${match[1]}:${match[2]}`\n        }\n        const caip = await (\n          Caip10Link.fromAccount(ceramic, id)\n        )\n        const did = caip.did\n        if(did === null) {\n          throw new Error(`No DID Found for ${id}.`)\n        }\n        const index = await idx.get(\n          ceramicIds.definitions.ConsultVideoIndex,\n          did,\n        )\n        if(index === null) {\n          throw new Error(`No Index of Videos Found for ${did}.`)\n        }\n        const eth = id.replace(/@.*/, '')\n        const ens = await ensProvider.lookupAddress(eth)\n        return (\n          Object.entries(index).map(([title, url]) => ({\n            addr: ens ?? eth,\n            title,\n            url,\n          }))\n        )\n      })\n    )\n    setDocs(docs.flat())\n  }, [contract, ensProvider])\n\n  useEffect(() => events(), [events])\n\n  /*\n  const pub = () => {\n    const caip10 = 'eip155:1:0x615b044b6ccb048532bcf99aadf619d7fdd2aa01'\n    const plusSigner = contract.connect(provider.getSigner())\n    plusSigner.publish(caip10)\n  }\n  */\n \n  return (\n    !docs ? (\n      <Stack align=\"center\" mt={12}>\n        <Heading>Loading…</Heading>\n        <Spinner/>\n      </Stack>\n    ) : (\n      <UnorderedList>\n        {docs.map(({addr, title, url}, idx) => (\n          <ListItem key={idx}><Link to={url}>\n            {addr}: {title}\n          </Link></ListItem>\n        ))}\n      </UnorderedList>\n    )\n  )\n}","import View from 'View'\nimport New from 'New'\nimport ListAvailable from 'ListAvailable'\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom'\n\nexport default () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/new\" component={New}/>\n      <Route path=\"/\" component={View}/>\n      <Route exact path=\"/\" component={ListAvailable}/>\n    </Switch>\n  </Router>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export default {\n  '/': (\n    \"QmbEzZzhqnJmtxoFbaA5fwdjaGN2rucVEkrGCi9o5sX31J/2021-08-04@10:01:40.MetaGame Builders' Align.mp4\"\n  ),\n}","import CID from './cid'\nimport { isoStringFor } from 'utils'\n\n// Should be ذو الحجة, but the bidi isn't cooperating in VS Code\nexport const id = 'tip:w/MetaGame’s Builders/on/1442/Dhuʻl-Hijjah/25/@/1/26/‒/1/77/'\nexport const startTime = new Date('2021-08-04T10:00:30-0400')\nexport const url = `https://ipfs.io/ipfs/${CID['/']}`\nexport const title = (\n  \"Builders' Align for the Week of 1442/12/22 ‒ 28\"\n)\n\nexport const stops = {\n  '01:01': {\n    name: 'Docker Swarm',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '02:16': {\n    name: 'Vercel',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '03:24': {\n    name: 'Service User',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '04:23': {\n    name: \"Rook's Intro\",\n    speakers: ['@Rook', '@Michiel'],\n  },\n  '10:24': {\n    name: 'TomBalls Enters',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '11:55': {\n    name: 'dan13ram Enters',\n    speakers: ['@dan13ram', '@Michiel'],\n  },\n  '12:19': {\n    name: 'Call Starts',\n    speakers: ['@Michiel'],\n  },\n  '12:34': {\n    name: 'b0gie Presents',\n    speakers: ['@b0gie'],\n  },\n  '14:38': {\n    name: 'TomBalls Presents',\n    speakers: ['@TomBalls'],\n  },\n  '16:28': {\n    name: 'Rook Presents',\n    speakers: ['@Rook'],\n  },\n  '17:58': {\n    name: 'Service User Done',\n  },\n  '18:31': {\n    name: 'jonathanp Presents',\n    speakers: ['@jonathanp'],\n  },\n  '19:05': {\n    name: \"googoomuck Doesn't Present\",\n    speakers: ['@Michiel'],\n  },\n  '19:29': {\n    name: 'dysbulic Presents',\n    speakers: ['@dysbulic'],\n  },\n  '23:02': {\n    name: 'dan13ram Presents',\n    speakers: ['@dan13ram'],\n  },\n  '32:52': {\n    name: 'arentweall Presents',\n    speakers: ['@arentweall'],\n  },\n  '34:05': {\n    name: 'Bagholder McFomo Presents',\n    speakers: ['@Bagholder McFomo'],\n  },\n  '38:05': {\n    name: 'Michiel Presents',\n    speakers: ['@Michiel'],\n  },\n  '42:38': {\n    name: 'pΞTH Presents',\n    speakers: [\"@peth don't need your eth\"],\n  },\n  '51:16': {\n    name: \"SoureCred's Meeting Channels\",\n    speakers: ['@Michiel'],\n  },\n  '53:55': {\n    name: 'Curious & Engaged Work',\n    speakers: [\"@peth don't need your eth\", '@Michiel', '@dysbulic', '@TomBalls'],\n  },\n  '01:00:05': {\n    name: 'stepan Presents',\n    speakers: ['@stepan'],\n  }\n}\n\nexport default {\n  title,\n  startTime: isoStringFor(startTime),\n  source: url,\n  stops,\n}","const props = [\n  { bg: '#19FF20' },\n  { bg: '#FF0000BB' },\n  { bg: 'pink' },\n  { bg: 'blue', color: 'white' },\n  { bg: 'orange' },\n  { bg: 'green', color: 'white' },\n  { bg: 'teal', color: 'white' },\n  { bg: 'purple', color: 'white' },\n  { bg: 'darkgray', color: 'white' },\n  { bg: 'cyan' },\n  { bg: 'black', color: 'red' },\n]\nconst proppedTags = []\nexport const propsFor = (info) => {\n  const search = info.tags?.[0] ?? info.speakers?.[0]\n  if(!search) return { bg: 'orange' }\n\n  let idx = proppedTags.indexOf(search)\n  if(idx < 0) {\n    idx = proppedTags.length\n    proppedTags.push(search)\n  }\n  idx = idx % props.length\n  return props[idx]\n}\n\nexport const isSet = (value) => (\n  Boolean(value) || value === 0\n)\n\nexport const ifSet = (value, { default: def } = {}) => (\n  isSet(value) ? value : def\n)\n\nexport const durationFor = (str) => {\n  if(typeof str !== 'string') {\n    throw new Error(`Bad Argument: expected string, got ${typeof str}`)\n  }\n  const [from, to = from] = str.split('‒').map(timeFor)\n  return {\n    startsOffset: from,\n    duration: to - from,\n  }\n}\n\nexport const timeFor = (str, { default: def } = {}) => (\n  !isSet(str) ? def : (\n    (() => {\n      str = str.toString()\n      const [secondsStr, minutesStr, hoursStr, ...rest] = (\n        str.split(':').reverse()\n      )\n      if(rest.length >= 1) {\n        console.warn(`Got [${rest}] extraneous parameters in ${str}.`)\n      }\n      let [seconds, minutes, hours] = ([\n        parseFloat(ifSet(secondsStr) ?? 0 ),\n        parseInt(ifSet(minutesStr) ?? 0),\n        parseInt(ifSet(hoursStr) ?? 0),\n      ])\n      minutes += hours * 60\n      return seconds + minutes * 60\n    })()\n  )\n)\n\nexport const stringFor = (\n  (time, { default: def, milliseconds = true } = {}) => {\n    if(!isSet(time)) return def\n\n    const sign = time < 0 ? '−' : ''\n    const hours = Math.floor(Math.abs(time / (60 * 60)))\n    const minutes = (\n      Math.floor(Math.abs((time % (60 * 60)) / 60))\n    )\n    const seconds = Math.floor(Math.abs(time % 60))\n    const mss = (\n      Math.abs(time) - Math.floor(Math.abs(time))\n    )\n\n    if(\n      ![hours, minutes, seconds, mss].reduce(\n        (acc, num) => acc && !isNaN(num),\n        true\n      )\n    ) {\n      return def\n    }\n\n    let [msStr] = (\n      mss.toFixed(4).split('.').slice(-1)\n    )\n    msStr = msStr.replace(/0+$/, '')\n\n    return (\n      `${sign}${\n        hours > 0 ? (\n          `${hours}:${minutes.toString().padStart(2, '0')}`\n        ) : (\n          minutes\n        )\n      }:${\n        seconds.toString().padStart(2, '0')\n      }${\n        (!milliseconds || msStr === '') ? '' : `.${msStr}`\n      }`\n    )\n  }\n)\n\nexport const isoStringFor = (date, opts = {}) => {\n  const tzo = -date.getTimezoneOffset()\n  const dif = tzo >= 0 ? '+' : '-'\n  const pad = (num) => {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? '0' : '') + norm;\n  }\n  const { dateSeparator: sep = '-' } = opts\n\n  let ret = ''\n  if(opts.date !== false) {\n    ret += (\n      date.getFullYear()\n      + sep + pad(date.getMonth() + 1)\n      + sep + pad(date.getDate())\n    )\n    if(opts.time !== false) {\n      ret += 'T'\n    }\n  }\n  if(opts.time !== false) {\n    ret += (\n      pad(date.getHours())\n      + ':' + pad(date.getMinutes())\n    )\n    if(opts.seconds ?? true) {\n      ret += ':' + pad(date.getSeconds())\n    }\n    if(opts.tz !== false) {\n      ret += `​(ᴜᴛᴄ${dif}${Math.abs(tzo / 60)}`\n      if((opts.tzMinutes ?? true) || tzo % 60 !== 0) {\n        ret += ':' + pad(tzo % 60)\n      }\n      ret += ')'\n    }\n  }\n  return ret\n}","export default {\n  '/': (\n    'QmZKXnvufBf2ZFEVqF78LPbfdEceShZ5QPubSjEViYWZ5X'\n  ),\n}","import CID from './cid'\nimport { isoStringFor } from 'utils'\n\nexport const startTime = new Date('2021-04-25T21:55:37-0400')\nexport const url = `https://ipfs.io/ipfs/${CID['/']}`\nexport const title = 'Raid Guild Initial Consultation Call w/ @joshsdoug'\n\nexport const stops = {\n  '00:00': {\n    name: 'Musical Intro',\n    tags: ['skippable']\n  },\n  '08:45': {\n    name: 'High Volume',\n    tags: ['chatter'],\n  },\n  '09:30': {\n    name: 'Blood Pressure',\n    tags: ['BP'],\n  },\n  '10:37': {\n    name: 'Bleeding Edge',\n    tags: ['pertinent'],\n  },\n  '13:06': {\n    name: 'Ceramic',\n    tags: ['pertinent'],\n  },\n  '15:26': {\n    name: 'Jitsi',\n    tags: ['logistics'],\n  },\n  '17:40': {\n    name: 'Call me “Δυς”.',\n    tags: ['personal'],\n  },\n  '18:04': {\n    name: 'Blood Pressure',\n    tags: ['BP'],\n  },\n  '18:50': {\n    name: 'Reread',\n    tags: ['skippable'],\n  },\n  '19:32': {\n    name: 'Peyote',\n    tags: ['BP'],\n  },\n  '20:16': {\n    name: 'Fractured',\n    tags: ['skippable'],\n  },\n  '20:54': {\n    name: 'BP Persistence',\n    tags: ['BP'],\n  },\n  '22:48': {\n    name: 'Reschedule',\n    tags: ['logistics'],\n  },\n  '24:06': {\n    name: 'Jitsi Found',\n    tags: ['logistics'],\n  },\n  '24:45': {\n    name: 'Stretch Goals',\n    tags: ['skippable'],\n  },\n  '25:45': {\n    name: 'Anarchism',\n    tags: ['pertinent'],\n  },\n  '26:45': {\n    name: 'Passed',\n    tags: ['personal'],\n  },\n  '28:23': {\n    name: 'Triage List',\n    tags: ['tangential'],\n  },\n  '30:08': {\n    name: 'Scattered',\n    tags: ['skippable'],\n  },\n  '33:29': {\n    name: 'Français',\n    tags: ['logistics'],\n  },\n  '35:15': {\n    name: \"Odin's Eye\",\n    tags: ['pertinent'],\n  },\n  '35:41': {\n    name: 'Hard Stop',\n    tags: ['logistics'],\n  },\n  '36:20': {\n    name: 'BP Resolution',\n    tags: ['BP'],\n  },\n  '36:43': {\n    name: 'Pairing Partners',\n    tags: ['pertinent'],\n  },\n  '37:21': {\n    name: 'Beggars in Spain',\n    tags: ['recommendation'],\n  },\n  '37:27': {\n    name: 'Ancillae',\n    tags: ['skippable'],\n  },\n  '37:53': {\n    name: 'Kubernetes',\n    tags: ['pertinent'],\n  },\n  '38:38': {\n    name: 'BP Mindlessness',\n    tags: ['BP'],\n  },\n  '40:00': {\n    name: 'Render Tree',\n    tags: ['algorithm'],\n  },\n  '41:25': {\n    name: (\n      '[Donnie Darko](https://ipfs.io/ipfs/QmTAdBoj7guxtLroQrdFTHrA1M2vSa37VQZoh4D77rdANc/Donnie.Darko.2001.mp4)'\n    ),\n    tags: ['recommendation'],\n  },\n  '43:42': {\n    name: 'Kinesthetic Reasoning',\n    tags: ['psych'],\n  },\n  '44:19': {\n    name: 'T-minus 5 Minutes',\n    tags: ['logistics'],\n  },\n  '44:52': {\n    name: '¿Will it happen?',\n    tags: ['pitch', 'pertinent'],\n  },\n  '46:27': {\n    name: 'Revolution through Election',\n    tags: ['pertinent'],\n  },\n  '47:22': {\n    name: '¿What year is it?',\n    tags: ['pitch', 'pertinent'],\n  },\n  '49:45': {\n    name: '1968',\n    tags: ['pertinent'],\n  },\n  '50:35': {\n    name: 'Dissatisfied',\n    tags: ['logistics'],\n  },\n  '52:48': {\n    name: '¿Make Sense?',\n    tags: ['pertinent'],\n  },\n  '53:26': {\n    name: \"Inch'allah\",\n    tags: ['logistics'],\n  },\n  '53:34': {\n    name: 'Euthanasia',\n    tags: ['personal'],\n  },\n  '54:04': {\n    name: 'Dead Air',\n    tags: ['skippable'],\n  },\n}\n\nexport default {\n  title,\n  startTime: isoStringFor(startTime),\n  source: url,\n  stops,\n}","var map = {\n\t\"./w/@dysbulic & @Huxwell/2021/08/24/@/15/32/04/‒/17/40/05/T/−4/js\": [\n\t\t1091,\n\t\t4\n\t],\n\t\"./w/MetaGame’s Builders/on/-3/♋/7/@/1/26/‒/1/78/js\": [\n\t\t706,\n\t\t0\n\t],\n\t\"./w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js\": [\n\t\t260\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/12/25/@/1/27/‒/1/77/js\": [\n\t\t260\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/Dhuʻl-Hijjah/25/@/1/27/‒/1/77/js\": [\n\t\t260\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/ذو الحجة/25/@/1/27/‒/1/77/js\": [\n\t\t260\n\t],\n\t\"./w/MetaGame’s Builders/on/2021/07/14/@/10/00/ᴇᴛ/‒/11/30/ᴇᴛ/js\": [\n\t\t706,\n\t\t0\n\t],\n\t\"./w/Raid Guild/cleric/@joshsdoug/1/js\": [\n\t\t501\n\t],\n\t\"./w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js\": [\n\t\t501\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 840;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}