{"version":3,"sources":["../src lazy /^/.//.*//js$/ groupOptions: {} namespace object","ceramic.svg","planning.svg","gavel.svg","ticket.svg","speaker.svg","question mark.svg","left arrow.svg","MarkedVideo.jsx","View.jsx","New.jsx","ListAvailable.jsx","App.jsx","index.jsx","w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/cid.js","w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js.jsx","utils.js","w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/cid.js","w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","icons","plan","decision","issue","presenter","previously","unknown","DEFAULT_DURATION","Math","pow","Video","chakra","colors","colorIds","colorFor","index","indexOf","push","length","newNode","obj","assign","uuid","children","partition","visit","node","method","apply","parent","isSet","connect","root","stops","Array","isArray","rent","child","clone","Spans","count","hovered","setHovered","duration","startOffset","rest","raw","idx","key","heightPercent","className","includes","label","title","top","height","position","_before","content","zIndex","opacity","left","bottom","right","bg","p","w","sx","onMouseEnter","mouseOver","onMouseLeave","dup","splice","mouseOut","style","display","flexGrow","minWidth","to","minW","direction","TimeBox","props","whiteSpace","textAlign","lineHeight","m","px","Times","startsAt","time","endsAt","useMemo","Date","getTime","isNaN","ends","isoStringFor","date","tz","split","part","borderTop","borderBottom","onlyTime","setter","str","replace","call","NodeSettings","open","closeNodeSettings","replaceNode","initialRef","useRef","useState","setTitle","body","setBody","baseStartOffset","baseDuration","defaultEnd","timeFor","ifSet","stringFor","endOffset","baseEndOffset","setStartOffset","start","end","setDuration","sync","setEndOffset","replacement","fields","gen","entries","forEach","value","size","initialFocusRef","isOpen","onClose","as","onSubmit","evt","preventDefault","textOverflow","overflow","pb","isFitted","variant","mb","mt","ref","autoFocus","onChange","target","onKeyPress","stopPropagation","minH","placeholder","disabled","ml","fontWeight","onClick","toString","alignSelf","mx","colorScheme","type","Events","insertChild","insertParent","seekTo","menuVisible","setMenuVisible","useDisclosure","openNodeSettings","onOpen","dur","timePercent","Option","fontSize","_hover","prefix","toLowerCase","icon","borderRadius","h","mr","src","alt","border","color","pt","a","linkTarget","insert","sibling","anchor","siblings","addPartition","addParallel","removeNode","val","toggleMenu","findById","result","VideoSettings","closeVideoSettings","info","setInfo","setStartsAt","DateTime","current","align","justify","milliseconds","config","vid","setTime","setRaw","setStops","source","encodeURI","vidHeight","setVidHeight","openVideoSettings","match","useEffect","fix","attr","siblingsOf","gparent","console","warn","total","i","pStart","pDur","generate","togglePause","paused","play","pause","window","addEventListener","removeEventListener","URLSearchParams","location","search","get","video","update","currentTime","set","outer","rawNode","findIndex","templateRows","templateColumns","maxH","rowSpan","colSpan","overflowY","self","pos","insertion","rawChild","maxW","controls","stripped","strip","metadata","blob","Blob","JSON","stringify","url","URL","createObjectURL","focus","error","CeramicLogo","transform","draggable","onDrag","y","clientY","getBoundingClientRect","max","innerHeight","useLocation","pathname","setFromObject","json","startsWith","CERAMIC_URL","process","ceramic","Ceramic","TileDocument","load","tile","endsWith","regex","http","fetch","res","parse","name","MarkedVideo","IPFS_URL","REACT_APP_IPFS_URI","DEF","definitions","ConsultVideoIndex","NewVideoModal","setVideos","ipfs","toISOString","startTime","tabIndex","creating","setCreating","add","anchorless","_str","$1","videos","toUrl","create","schema","schemas","ConsultVideoMetadata","family","controllers","did","merge","pin","record","loadingText","isLoading","IDX","autopin","ipfsHTTPClient","remove","loadVideos","threeIdConnect","ThreeIdConnect","ethereum","enable","addresses","authProvider","EthereumAuthProvider","DID","provider","getDidProvider","resolver","ThreeIdResolver","getResolver","authenticate","V1","V2","metas","fromEntries","Delete","docs","setDocs","ethers","providers","JsonRpcProvider","ensProvider","contract","Contract","address","abi","events","useCallback","filter","filters","CAIP_10","queryFilter","addrs","Set","args","caip10","Caip10Link","fromAccount","caip","ceramicIds","eth","lookupAddress","ens","addr","flat","exact","path","component","New","View","ListAvailable","ReactDOM","render","StrictMode","App","document","getElementById","speakers","Boolean","def","default","reverse","secondsStr","minutesStr","hoursStr","parseFloat","parseInt","minutes","sign","hours","floor","abs","seconds","mss","reduce","acc","num","toFixed","msStr","padStart","opts","tzo","getTimezoneOffset","dif","pad","norm","dateSeparator","sep","ret","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tzMinutes","tags"],"mappings":"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","file":"static/js/main.b5142c13.chunk.js","sourcesContent":["var map = {\n\t\"./w/@dysbulic & @Huxwell/2021/08/24/@/15/32/04/‒/17/40/05/T/−4/js\": [\n\t\t1311,\n\t\t4\n\t],\n\t\"./w/MetaGame’s Builders/on/-3/♋/7/@/1/26/‒/1/78/js\": [\n\t\t910,\n\t\t0\n\t],\n\t\"./w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js\": [\n\t\t322\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/12/25/@/1/27/‒/1/77/js\": [\n\t\t322\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/Dhuʻl-Hijjah/25/@/1/27/‒/1/77/js\": [\n\t\t322\n\t],\n\t\"./w/MetaGame’s Builders/on/1442/ذو الحجة/25/@/1/27/‒/1/77/js\": [\n\t\t322\n\t],\n\t\"./w/MetaGame’s Builders/on/2021/07/14/@/10/00/ᴇᴛ/‒/11/30/ᴇᴛ/js\": [\n\t\t910,\n\t\t0\n\t],\n\t\"./w/Raid Guild/cleric/@joshsdoug/1/js\": [\n\t\t671\n\t],\n\t\"./w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js\": [\n\t\t671\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1013;\nmodule.exports = webpackAsyncContext;","export default __webpack_public_path__ + \"static/media/ceramic.0ee77a5c.svg\";","export default __webpack_public_path__ + \"static/media/planning.94b7dbe6.svg\";","export default __webpack_public_path__ + \"static/media/gavel.5e85fdeb.svg\";","export default __webpack_public_path__ + \"static/media/ticket.469c9ef9.svg\";","export default __webpack_public_path__ + \"static/media/speaker.c8965534.svg\";","export default __webpack_public_path__ + \"static/media/question mark.fd3be730.svg\";","export default __webpack_public_path__ + \"static/media/left arrow.80561781.svg\";","import {\n  Box, Button, ButtonGroup, Flex, GridItem, Grid, Heading,\n  Stack, Spacer, Spinner, chakra, useDisclosure, Input,\n  ModalOverlay, ModalContent, ModalHeader, ModalFooter,\n  ModalCloseButton, ModalBody, FormControl, FormLabel,\n  Modal, Text, Textarea, Divider, Image, Tooltip,\n  Tabs, TabList, TabPanels, Tab, TabPanel,\n} from '@chakra-ui/react'\nimport {\n  useEffect, useRef, useState, useMemo,\n} from 'react'\nimport Markdown from 'react-markdown'\nimport { v4 as uuid } from 'uuid'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport {\n  isoStringFor, stringFor, timeFor, isSet, ifSet,\n} from 'utils'\nimport CeramicLogo from './ceramic.svg'\n\nimport plan from './planning.svg'\nimport decision from './gavel.svg'\nimport issue from './ticket.svg'\nimport presenter from './speaker.svg'\nimport unknown from './question mark.svg'\nimport previously from './left arrow.svg'\n\nconst icons = {\n  plan, decision, issue, presenter, previously, unknown,\n}\n\nconst DEFAULT_DURATION = Math.pow(60, 3)\nconst DEFAULT_VID_HEIGHT = 85\n\nconst Video = chakra('video')\n\nconst colors = [\n  'orange', 'red', 'green', 'purple', 'yellow',\n  'silver', 'blue', 'cyan', 'brown',\n  'black', 'white', 'coral', 'gray', 'pink',\n  'olive', 'orangered', 'teal', 'gold',\n]\n\nconst colorIds = []\nconst colorFor = (id) => {\n  let index = colorIds.indexOf(id)\n  if(index < 0) {\n    colorIds.push(id)\n    index = colorIds.length - 1\n  }\n  return colors[index % colors.length]\n}\n\nconst newNode = (obj = {}) => (\n  Object.assign(\n    { id: uuid(), children: [], partition: false },\n    obj,\n  )\n)\n\nconst visit = ({ node, method }) => {\n  let children = node?.children ?? []\n  children = method.apply(\n    node, [{ children, parent: node, visit }]\n  )\n  if(isSet(node.children)) {\n    node.children = children\n  }\n  return node\n}\n\nconst siblingsOf = (node) => {\n  const {\n    parent: { children: siblings } = { children: null }\n  } = node\n  return !node.parent ? [node] : siblings\n}\n\nconst connect = ({ stops }) => {\n  const parent = ({ children = [], parent: rent, visit }) => {\n    children = children.map((child) => {\n      child = visit({ node: newNode(child), method: parent })\n      child.parent = rent\n      return child\n    })\n    return children\n  }\n  let root = stops\n  if(Array.isArray(root)) {\n    root = { children: root }\n  }\n  return visit({ node: newNode(root), method: parent })\n}\n\nconst clone = (stops) => connect({ stops })\n\nconst generate = ({ root, duration, raw }) => {\n  const fix = ({ parent, children, visit }) => {\n    parent.raw = findById(raw, parent.id)\n\n    children.forEach((child) => {\n      ['duration', 'startOffset'].forEach((attr) => {\n        if (typeof child[attr] === 'string') {\n          child[attr] = timeFor(child[attr])\n        }\n      })\n    })\n\n    const siblings = siblingsOf(parent)\n    const index = siblings.indexOf(parent)\n    const gparent = parent.parent\n    if(\n      !isSet(parent.startOffset)\n      || isNaN(parent.startOffset)\n    ) {\n      if(gparent?.partition) {\n        if(index === 0) {\n          parent.startOffset = gparent.startOffset\n        } else if(index <= siblings.length - 1) {\n          parent.startOffset = (\n            siblings[index - 1].startOffset\n            + siblings[index - 1].duration\n          )\n        } else {\n          console.warn(\n            'Bad Index',\n            { index, parent, siblings },\n          )\n        }\n      } else if(gparent) {\n        parent.startOffset = gparent.startOffset\n      } else {\n        parent.startOffset = 0\n      }\n    }\n\n    if(\n      !isSet(parent.duration)\n      || isNaN(parent.duration)\n    ) {\n      if(gparent?.partition) {\n        if(index >= 0 && index < siblings.length - 1) {\n          const start = index\n          let end = start + 1\n          while(\n            end < siblings.length\n            && !isSet(siblings[end].startOffset)\n          ) {\n            end++\n          }\n          const total = (\n            (end === siblings.length ? (\n              gparent.startOffset + gparent.duration\n            ) : (\n              siblings[end].startOffset\n            ))\n            - siblings[start].startOffset\n          )\n          for(let i = start; i < end; i++) {\n            siblings[i].duration = (\n              total / (end - start)\n            )\n          }\n        } else if(index === siblings.length - 1) {\n          const {\n            startOffset: pStart, duration: pDur\n          } = gparent\n          parent.duration = (\n            (pStart + pDur) - parent.startOffset\n          )\n        } else {\n          console.warn(\n            'Bad Index',\n            { index, parent, siblings },\n          )\n        }\n      } else if(gparent) {\n        parent.duration = gparent.duration\n      } else {\n        parent.duration = duration\n      }\n    }\n  \n    if (!isSet(parent.startOffset)) {\n      console.warn(`No Starting Time`, { parent })\n    }\n    if (!isSet(parent.duration)) {\n      console.warn(`No Event Duration`, { parent })\n    }\n\n    return children.map((child) => (\n      visit({ node: child, method: fix })\n    ))\n  }\n\n  return visit({ node: clone(root), method: fix })\n}\n\nconst Spans = ({ node, count = 1, hovered, setHovered }) => {\n  if (!node) return null\n\n  const mouseOver = (node) => {\n    const ids = []\n    while(node) {\n      ids.push(node.id)\n      node = node.parent\n    }\n    setHovered(ids)\n  }\n  const mouseOut = (node) => {\n    setHovered((ids) => {\n      const dup = [...ids]\n      dup.splice(ids.indexOf(node.id), 1)\n      return dup\n    })\n  }\n\n  const {\n    id, children = [], startOffset,\n    duration, partition, raw, ...rest\n  } = node\n\n  if (Object.keys(rest).length === 0) {\n    return (\n      children.map((child, idx) => (\n        <Spans\n          {...{ duration, hovered, setHovered }}\n          key={idx}\n          node={child}\n          count={count + idx + 1}\n        />\n      ))\n    )\n  }\n\n  const timePercent = 0 //100 * startOffset / duration\n  const heightPercent = (\n    100 * duration / (node.parent?.duration ?? duration)\n  )\n  let className = 'span'\n  if(hovered.includes(node.id)) {\n    className += ' hovered'\n  }\n\n  return (\n    <Tooltip label={node.title}>\n      <Flex\n        top={`${timePercent}%`}\n        height={`${heightPercent}%`}\n        position=\"relative\"\n        _before={{\n          content: '\"\"', zIndex: -1,\n          position: 'absolute', opacity: 0.5,\n          top: 0, left: 0, bottom: 0, right: 0,\n          bg: colorFor(node.id),\n        }}\n        p={0} w=\"full\" {...{ className }}\n        sx={{\n          '&.hovered::before': { opacity: 1 }\n        }}\n        onMouseEnter={() => mouseOver(node)}\n        onMouseLeave={() => mouseOut(node)}\n      >\n        <Link\n          style={{\n            display: 'block',\n            flexGrow: 2,\n            minWidth: \"0.75em\",\n          }}\n          to={`#${node.id}`}\n        />\n        <Flex\n          flexGrow={0}\n          minW={node.children.length === 0 ? 0 : '1em'}\n          direction={node.partition ? 'column' : 'row'}\n        >\n          {node.children.map((child, idx) => (\n            <Spans\n              {...{ duration, hovered, setHovered }}\n              key={child.id} node={child}\n              count={count + idx + 1}\n            />\n          ))}\n        </Flex>\n        <Link\n          style={{\n            display: 'block',\n            flexGrow: 1,\n            minWidth: \"0.25em\",\n          }}\n          to={`#${node.id}`}\n        />\n      </Flex>\n    </Tooltip>\n  )\n}\n\nconst TimeBox = (({ children, ...props }) => (\n  <Box\n    whiteSpace=\"pre\" textAlign=\"center\"\n    lineHeight=\"1rem\" m=\"0 !important\"\n    px=\"0.1rem\" {...props}\n  >\n    {children}\n  </Box>\n))\n\nconst Times = ({\n  node, startsAt, duration, time,\n  hovered, setHovered, ...props\n}) => {\n  const endsAt = useMemo(() => (\n    new Date(startsAt.getTime() + duration * 1000)\n  ), [startsAt, duration])\n\n  if (!(endsAt instanceof Date) || isNaN(endsAt) || !node) {\n    return null\n  } else {\n    const ends = isoStringFor(\n      endsAt,\n      { date: false, tz: false },\n    )\n\n    return (\n      <Flex {...props}>\n        <Stack key=\"times\">\n          {\n            isoStringFor(startsAt).split('T')\n            .map((part, idx) => (\n              <TimeBox\n                key={idx}\n                borderTop={idx === 0 ? '2px dashed' : ''}\n              >\n                {part}\n              </TimeBox>\n            ))\n          }\n          <Spacer />\n          <TimeBox borderBottom=\"2px dashed\">\n            {ends}\n          </TimeBox>\n        </Stack>\n        <Flex>\n          <Spans {...{ node, hovered, setHovered }} />\n        </Flex>\n      </Flex>\n    )\n  }\n}\n\nconst onlyTime = ({ setter }) => (\n  (str) => {\n    str = (\n      str.replace(/[^0-9\\-−:.]/g, '')\n      .replace(/^(.+)[-−](.*)$/g, '$1$2')\n    )\n    setter.call(this, str)\n    return str\n  }\n)\n\nconst NodeSettings = ({\n  open, closeNodeSettings, node, replaceNode,\n}) => {\n  const { partition, children, raw } = node\n  const initialRef = useRef()\n  const [title, setTitle] = useState(node.title)\n  const [body, setBody] = useState(node.body)\n  const [startOffset, baseStartOffset] = (\n    useState(raw.startOffset ?? '')\n  )\n  const [duration, baseDuration] = (\n    useState(raw.duration ?? '')\n  )\n  const defaultEnd = (\n    timeFor(ifSet(startOffset) ?? node.startOffset)\n    + timeFor(ifSet(duration) ?? node.duration)\n  )\n  const [endOffset, baseEndOffset] = (\n    useState(\n      (isSet(startOffset) && isSet(duration)) ? (\n        stringFor(defaultEnd)\n      ) : (\n        ''\n      )\n    )\n  )\n  const setStartOffset = (str) => {\n    str = onlyTime({ setter: baseStartOffset })(str)\n    const start = (\n      timeFor(ifSet(str) ?? node.startOffset)\n    )\n    if(isSet(endOffset)) {\n      const end = timeFor(endOffset)\n      setDuration(\n        stringFor(end - start),\n        { sync: false },\n      )\n    } else if(isSet(duration)) {\n      const length = timeFor(duration)\n      setEndOffset(\n        stringFor(start + length),\n        { sync: false },\n      )\n    }\n  }\n  const setDuration = (str, { sync } = {}) => {\n    str = onlyTime({ setter: baseDuration })(str)\n    if(sync !== false && (isSet(endOffset) || isSet(startOffset))) {\n      const start = (\n        timeFor(ifSet(startOffset) ?? node.startOffset)\n      )\n      setEndOffset(\n        stringFor(start + timeFor(str)),\n        { sync: false },\n      )\n    }\n  }\n  const setEndOffset = (str, { sync } = {}) => {\n    str = onlyTime({ setter: baseEndOffset })(str)\n    if(\n      sync !== false\n      && (isSet(duration) || isSet(startOffset))\n    ) {\n      const start = (\n        timeFor(ifSet(startOffset) ?? node.startOffset)\n      )\n      const end = timeFor(str)\n      setDuration(\n        stringFor(end - start),\n        { sync: false },\n      )\n    }\n  }\n  const replacement = useMemo(() => {\n    const fields = {\n      title, body, duration, startOffset,\n      partition, children, id: node.id,\n    }\n    const gen = newNode()\n    Object.entries(fields).forEach(\n      ([key, value]) => {\n        if(isSet(value)) {\n          gen[key] = value\n        }\n      }\n    )\n    return gen\n  }, [\n    body, children, duration,\n    partition, startOffset, title,\n    node.id,\n  ])\n  const save = (evt) => {\n    evt.preventDefault()\n    replaceNode({ node, replacement })\n    closeNodeSettings()\n  }\n\n  return (\n    <Modal\n      size=\"xl\" initialFocusRef={initialRef}\n      {...{ isOpen: open, onClose: closeNodeSettings }}\n    >\n      <ModalOverlay/>\n      <ModalContent as=\"form\" onSubmit={save}>\n        <ModalHeader\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n        >Node: <q>{title}</q></ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody pb={6}>\n          <Tabs isFitted variant=\"enclosed\">\n            <TabList mb=\"1em\">\n              <Tab>Text</Tab>\n              <Tab>Timing</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <FormControl mt={4}>\n                  <FormLabel>Title</FormLabel>\n                  <Input\n                    ref={initialRef} value={title} autoFocus\n                    onChange={({ target: { value }}) => {\n                      setTitle(value)\n                    }}\n                    onKeyPress={(evt) => {\n                      evt.stopPropagation()\n                    }}\n                  />\n                </FormControl>\n                <FormControl mt={4}>\n                  <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                      <Tab>Body</Tab>\n                      <Tab>Preview</Tab>\n                    </TabList>\n                    <TabPanels>\n                      <TabPanel>\n                        <Textarea\n                          value={body} minH=\"5em\"\n                          placeholder=\"Markdown\"\n                          onChange={({ target: { value }}) => {\n                            setBody(value)\n                          }}\n                        />\n                      </TabPanel>\n                      <TabPanel>\n                        <Markdown>{body}</Markdown>\n                      </TabPanel>\n                    </TabPanels>\n                  </Tabs>\n                </FormControl>\n                <FormControl mt={4}>\n                  <FormLabel>ID</FormLabel>\n                  <Input\n                    value={node.id} disabled\n                  />\n                </FormControl>\n              </TabPanel>\n              <TabPanel>\n                <FormControl>\n                  <FormLabel>Start Offset</FormLabel>\n                  <Flex>\n                    <Input\n                      ref={initialRef} value={startOffset}\n                      placeholder={\n                        'automatic or HH:mm:ss.msms or mm:ss or ssss'\n                      }\n                      onChange={({ target: { value }}) => (\n                        setStartOffset(value)\n                      )}\n                    />\n                    {\n                      startOffset === '' && node.startOffset >= 0\n                      && ((() => {\n                        const time = stringFor(node.startOffset)\n                        return (\n                          <Button\n                            variant=\"outline\"\n                            p={2} ml={2} fontWeight=\"bold\"\n                            onClick={() => {\n                              setStartOffset(time)\n                            }}\n                            title={\n                              `Autocomplete with ${time}`\n                            }\n                          >←</Button>\n                        )\n                      })())\n                    }\n                  </Flex>\n                </FormControl>\n\n                <Flex>\n                  <FormControl mt={4}>\n                    <FormLabel>End Offset</FormLabel>\n                    <Flex>\n                      <Input\n                        placeholder=\"automatic\"\n                        value={endOffset}\n                        onChange={({ target: { value }}) => {\n                          setEndOffset(value)\n                        }}\n                      />\n                      {\n                        endOffset === '' && !!defaultEnd\n                        && ((() => {\n                          const time = stringFor(defaultEnd.toString())\n                          return (\n                            <Button\n                              variant=\"outline\"\n                              p={2} ml={2} fontWeight=\"bold\"\n                              onClick={() => {\n                                setEndOffset(time)\n                              }}\n                              title={\n                                `Autocomplete with ${time}`\n                              }\n                            >←</Button>\n                          )\n                        })())\n                      }\n                    </Flex>\n                  </FormControl>\n                  <Text alignSelf=\"end\" mb={2} mx={2}>or</Text>\n                  <FormControl mt={4}>\n                    <FormLabel>Duration</FormLabel>\n                    <Flex>\n                      <Input\n                        placeholder=\"automatic\"\n                        value={duration}\n                        onChange={({ target: { value }}) => (\n                          setDuration(value)\n                        )}\n                      />\n                      {\n                        !isSet(duration) && isSet(node.duration)\n                        && ((() => {\n                          const time = stringFor(node.duration.toString())\n                          return (\n                            <Button\n                              variant=\"outline\"\n                              p={2} ml={2} fontWeight=\"bold\"\n                              onClick={() => {\n                                setDuration(time)\n                              }}\n                              title={\n                                `Autocomplete with ${time}`\n                              }\n                            >←</Button>\n                          )\n                        })())\n                      }\n                    </Flex>\n                  </FormControl>\n                </Flex>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"red\"\n            onClick={closeNodeSettings}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\" ml={3}\n          >Save</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst Events = ({\n  node = {}, insertChild, replaceNode, insertParent,\n  duration, count = 1, hovered, setHovered, seekTo,\n  ...props\n}) => {\n  const [menuVisible, setMenuVisible] = (\n    useState(false)\n  )\n  const {\n    isOpen: open,\n    onOpen: openNodeSettings,\n    onClose: closeNodeSettings,\n  } = useDisclosure()\n\n  if (!node) return null\n\n  const toggleMenu = (value = null) => {\n    if(value !== null) {\n      setMenuVisible(value)\n    } else {\n      setMenuVisible((val) => !val)\n    }\n  }\n\n  const addChild = (parent) => {\n    insertChild(\n      { parent, insert: { title: 'new' } }\n    )\n  }\n  const addPartition = (sibling) => {\n    const { parent } = sibling\n    if(!parent.partition) {\n      insertParent({\n        child: sibling,\n        insert: { partition: true },\n        siblings: [newNode({ title: 'part' })],\n      })\n    } else {\n      insertChild({\n        parent, insert: { title: 'new' }, anchor: sibling\n      })\n    }\n  }\n  const addParallel = (sibling) => {\n    let { parent } = sibling\n    while(parent.partition && parent.parent) {\n      sibling = parent\n      parent = parent.parent\n    }\n    insertChild({\n      parent, insert: { title: 'para' }, anchor: sibling\n    })\n  }\n  const removeNode = (node) => {\n    replaceNode({ node })\n  }\n\n  const mouseOver = (node) => {\n    const ids = []\n    while(node) {\n      ids.push(node.id)\n      node = node.parent\n    } \n    setHovered(ids)\n  }\n  const mouseOut = (node) => {\n    setHovered((ids) => {\n      const dup = [...ids]\n      dup.splice(ids.indexOf(node.id), 1)\n      return dup\n    })\n  }\n\n  const edit = (node) => {\n    openNodeSettings()\n  }\n\n  const {\n    id, children = [], startOffset,\n    duration: dur, partition, raw, ...rest\n  } = node\n\n  if (Object.keys(rest).length === 0) {\n    return (\n      children.map((child, idx) => {\n        return (\n        <Events\n          {...{\n            duration, insertChild,\n            insertParent, replaceNode,\n            hovered, setHovered,\n            seekTo,\n          }}\n          key={idx}\n          node={child}\n          count={count + idx}\n        />\n        )\n      })\n    )\n  }\n\n  const timePercent = 100 * startOffset / duration\n  const heightPercent = 100 * dur / duration\n  let className = 'event'\n  if(hovered.includes(node.id)) {\n    className += ' hovered'\n  }\n\n  const Option = ({ children, onClick, ...props }) => {\n    const clicked = (evt) => {\n      evt.stopPropagation()\n      onClick(evt)\n    }\n    return (\n      <Button\n        {...props}\n        fontWeight=\"normal\" variant=\"outline\" mt={1.25}\n        fontSize={15} p={1} _hover={{ bg: '#00000077' }}\n        onClick={onClick ? clicked : null}\n      >{children}</Button>\n    )\n  }\n\n  const prefix = node.title?.replace(/:.*/g, '').toLowerCase()\n  let icon = icons[prefix]\n  if(!icon) {\n    icon = icons.unknown\n  }\n\n  return (\n    <>\n      <NodeSettings\n        {...{\n          closeNodeSettings, open,\n          node, replaceNode,\n        }}\n      />\n      <Stack\n        id={node.id}\n        top={`${timePercent}%`}\n        minH={`${heightPercent}%`}\n        position=\"relative\"\n        _before={{\n          content: '\"\"', zIndex: -1,\n          position: 'absolute', opacity: 0.5,\n          top: 0, left: 0, bottom: 0, right: 0,\n          bg: colorFor(node.id),\n        }}\n        px={3} w=\"full\"\n        sx={{\n          '&.hovered::before': { opacity: 1 }\n        }}\n        onMouseEnter={() => mouseOver(node)}\n        onMouseLeave={() => mouseOut(node)}\n        onClick={(evt) => {\n          evt.stopPropagation()\n          seekTo(node.startOffset)\n        }}\n        {...props} {...{ className }}\n      >\n        {node.title && (\n          <Flex>\n            {icon && (\n              <Image\n                borderRadius=\"50%\" bg=\"#FFFFFF55\"\n                p={0.5} w={10} h={10} mr={2}\n                src={icon} alt={prefix}\n                border=\"1px solid black\"\n              />\n            )}\n            <Heading\n              fontSize={32} color=\"white\" pt={1.5}\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n              title={node.title}\n              sx={{\n                a: { borderBottom: '2px dashed' },\n                'a:hover': { borderBottom: '2px solid' },\n              }}\n            >\n              <Markdown linkTarget=\"_blank\">\n                {node.title}\n              </Markdown>\n            </Heading>\n            <Spacer />\n            {menuVisible && (\n              <ButtonGroup>\n                <Option\n                  title=\"Edit This Node\"\n                  onClick={() => edit(node)}\n                >✏️</Option>\n                <Option\n                  title=\"Create A Child\"\n                  onClick={() => addChild(node)}\n                >█ → 🬠</Option>\n                <Option\n                  title=\"Create A Partition Sibling\"\n                  onClick={() => addPartition(node)}\n                >█ → 🮒</Option>\n                <Option\n                  title=\"Create A Parallel Sibling\"\n                  onClick={() => addParallel(node)}\n                >█ → 🮔</Option>\n                <Option\n                  title=\"Remove Node\"\n                  onClick={() => removeNode(node)}\n                >➖</Option>\n              </ButtonGroup>\n            )}\n            <Button\n              ml={3}\n              onClick={(evt) => {\n                evt.stopPropagation()\n                toggleMenu()\n              }}\n              title={menuVisible ? (\n                'Hide Node Options'\n              ) : (\n                'Show Node Options'\n              )}\n            >\n              {menuVisible ? <Text fontWeight=\"bold\">┆</Text> : '☰'}\n            </Button>\n          </Flex>\n        )}\n        {isSet(node.body) && (\n          <Box\n            sx={{\n               a: { borderBottom: 'dashed' },\n               'a:hover': { borderBottom: 'solid' },\n            }}\n          >\n            <Divider color=\"white\"/>\n            <Markdown linkTarget=\"_blank\">\n              {node.body}\n            </Markdown>\n          </Box>\n        )}\n        {node.children?.map((child, idx) => (\n          <Events\n            {...{\n              duration, insertChild,\n              insertParent, replaceNode,\n              hovered, setHovered,\n              seekTo,\n            }}\n            key={idx}\n            node={child}\n            count={count + idx + 1}\n          />\n        ))}\n      </Stack>\n    </>\n  )\n}\n\nconst findById = (root, id) => {\n  if(root.id === id) {\n    return root\n  }\n  for(const child of root.children) {\n    const result = findById(child, id)\n    if(result) {\n      return result\n    }\n  }\n}\n\nconst VideoSettings = ({\n  open, closeVideoSettings, info, setInfo,\n}) => {\n  if(!isSet(info.startsAt)) {\n    info.startsAt = new Date()\n  }\n  const [startsAt, setStartsAt] = useState(\n    isoStringFor(info.startsAt, { tz: false })\n  )\n\n  const save = (evt) => {\n    evt.preventDefault()\n    setInfo((info) => ({\n      ...info, startsAt: new Date(startsAt),\n    }))\n    closeVideoSettings()\n  }\n\n  return (\n    <Modal\n      size=\"xl\"\n      {...{ isOpen: open, onClose: closeVideoSettings }}\n    >\n      <ModalOverlay/>\n      <ModalContent as=\"form\" onSubmit={save}>\n        <ModalHeader\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n        >Video Settings</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody pb={6}>\n          <FormControl mt={4}>\n            <FormLabel>Start Time</FormLabel>\n            <Input\n              type=\"datetime-local\"\n              value={startsAt} autoFocus\n              onChange={({ target: { value }}) => {\n                setStartsAt(value)\n              }}\n            />\n          </FormControl>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"red\"\n            onClick={closeVideoSettings}\n          >Cancel</Button>\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\" ml={3}\n          >Save</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst DateTime = ({ startsAt, time }) => {\n  const current = (\n    new Date(startsAt.getTime() + time * 1000)\n  )\n  const opts = { date: false, tz: false }\n  return (\n    <Flex\n      direction=\"column\" lineHeight={1}\n      align=\"center\" justify=\"center\"\n    >\n      <Box>{isoStringFor(current, opts)}</Box>\n      <Box>\n        +{stringFor(time, { milliseconds: false })}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default (config) => {\n  const [duration, setDuration] = (\n    useState(DEFAULT_DURATION)\n  )\n  const vid = useRef()\n  const [time, setTime] = useState(0)\n  const [raw, setRaw] = useState(\n    connect({ stops: config.stops })\n  )\n  const [stops, setStops] = useState()\n  const [hovered, setHovered] = useState([])\n  const [info, setInfo] = useState({\n    startsAt: config.startsAt,\n    source: encodeURI(config.source),\n  })\n  const { startsAt, source } = info\n  const [vidHeight, setVidHeight] = (\n    useState(DEFAULT_VID_HEIGHT)\n  )\n  const {\n    isOpen: open,\n    onOpen: openVideoSettings,\n    onClose: closeVideoSettings,\n  } = useDisclosure()\n  const src = useMemo(() => {\n    const regex = /^ipfs:(\\/\\/)?(.+)$/i\n    const match = source.match(regex)\n    if (match) {\n      if(match[2].includes('Qmeiz7YmwtVYMRSUG3VdKTxU634JTPaB5j2xLj5RREqAkG')) {\n        return 'http://bafybeihtoo2yau6rnzlfad3jh62u3wccm4bs7j7wh5wb76estw77codume.ipfs.localhost:8888/2021%E2%81%8410%E2%81%8406@09:56:54.MetaGame%E2%80%99s%20Builders%E2%80%99%20Align.x264.mp4'\n      }\n\n      return `//ipfs.io/ipfs/${match[2]}`\n    }\n    return source\n  }, [source])\n\n  useEffect(() => {\n    const stops = generate({ root: raw, duration, raw })\n    setStops(stops)\n  }, [raw, duration])\n\n  useEffect(() => {\n    const togglePause = (evt) => {\n      switch(evt.key) {\n        case 'p': case 'P':\n          if(vid.current.paused) {\n            vid.current.play()\n          } else {\n            vid.current.pause()\n          }\n        break\n        case 'b':\n          seekTo(time - 5)\n        break\n        case 'B':\n          seekTo(time - 20)\n        break\n        case 'f':\n          seekTo(time + 5)\n        break\n        case 'F':\n          seekTo(time + 20)\n        break\n        default:\n        break\n      }\n    }\n    window.addEventListener('keypress', togglePause)\n    return () => {\n      window.removeEventListener('keypress', togglePause)\n    }\n  })\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search)\n    const chapterIdx = params.get('chapter')\n    if (chapterIdx) {\n      seekTo(\n        // chapters[parseInt(chapterIdx)].start\n      )\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const video = vid.current\n    const update = ({ target: { currentTime: time }}) => {\n      setTime(time)\n    }\n    video.addEventListener('timeupdate', update)\n    return () => {\n      video.removeEventListener('timeupdate', update)\n    }\n  }, [setTime])\n\n  useEffect(() => {\n    const video = vid.current\n    const set = () => setDuration(video.duration)\n    video.addEventListener('loadedmetadata', set)\n    return () => {\n      video.removeEventListener('loadedmetadata', set)\n    }\n  }, [])\n\n  const insertChild = ({ parent, insert, anchor }) => {\n    const self = { ...findById(raw, parent.id) }\n    insert = newNode(insert)\n    insert.parent = self\n    const { children } = parent\n    const pos = (\n      anchor ? children.indexOf(anchor) : children.length\n    )\n    self.children = [\n      ...self.children.slice(0, pos + 1),\n      insert,\n      ...self.children.slice(pos + 1),\n    ]\n    const insertion = ({ children, visit }) => (\n      children.map((child) => {\n        visit({ node: child, method: insertion })\n        return child.id === self.id ? self : child\n      })\n    )\n    setRaw((raw) => {\n      return visit({ node: clone(raw), method: insertion })\n    })\n  }\n\n  const insertParent = ({ child, insert, siblings = [] }) => {\n    const rawChild = findById(raw, child.id)\n    insert.children = [rawChild, ...siblings]\n    replaceNode({\n      node: rawChild,\n      replacement: newNode(insert),\n    })\n    return insert\n  }\n\n  const replaceNode = ({ node, replacement = null }) => {\n    let outer = null\n    setRaw((raw) => {\n      const dup = outer = clone(raw)\n      const rawNode = findById(dup, node.id)\n\n      if(!rawNode) {\n        throw new Error(`Couldn't find node with id: ${node.id}`)\n      }\n\n      const { parent } = rawNode\n      const { children } = parent\n      const index = children.findIndex(\n        (child) => child.id === node.id\n      )\n      if(!replacement) {\n        children.splice(index, 1)\n      } else {\n        replacement.parent = parent\n        parent.children = [\n          ...children.slice(0, index),\n          replacement,\n          ...children.slice(index + 1),\n        ]\n      }\n      return dup\n    })\n    return outer\n  }\n\n  const seekTo = (time) => {\n    console.info('Seeking To', time)\n    vid.current.currentTime = time\n  }\n\n  const serialize = () => {\n    const strip = (\n      ({ parent, children, visit }) => {\n        delete parent.id\n        delete parent.parent\n        if(!parent.partition) {\n          delete parent.partition\n        }\n        if(children.length === 0) {\n          delete parent.children\n        }\n        delete parent.raw\n\n        return children.map((child) => (\n          visit({ node: child, method: strip })\n        ))\n      }\n    )\n    const stripped = (\n      visit({ node: clone(raw), method: strip })\n    )\n    const metadata = {\n      video: info,\n      stops: stripped,\n    }\n    try {\n      const blob = new Blob(\n        [JSON.stringify(metadata, null, 2)],\n        { type: \"text/json\" },\n      )\n      const url = window.URL.createObjectURL(blob)\n      window.open(url, '_blank').focus()\n    } catch(error) {\n      console.error({ error })\n    }\n  }\n\n  const upload = () => {\n  }\n\n  const clicked = (elem) => {\n    const currentClicked = info.current === elem\n    if (currentClicked && !vid.current.paused) {\n      vid.current.pause()\n    } else if (currentClicked && vid.current.paused) {\n      vid.current.play()\n    } else if (!currentClicked) {\n      vid.current.currentTime = elem.start + 0.01 // it misses\n      if (vid.current.paused) {\n        vid.current.play()\n      }\n    }\n  }\n\n  return (\n    <>\n      <VideoSettings {...{\n        open, closeVideoSettings, info, setInfo,\n      }}/>\n      <Grid\n        as=\"form\"\n        templateRows=\"1fr 0fr\"\n        templateColumns=\"0fr 1fr\"\n        maxH=\"100vh\"\n      >\n        {!stops ? (\n          <GridItem id=\"spinner\" rowSpan={1} colSpan={2}>\n            <Spinner />\n          </GridItem>\n        ) : (\n          <>\n            <GridItem id=\"spans\" rowSpan={1} colSpan={1}>\n              <Times\n                {...{\n                  startsAt, duration, time,\n                  hovered, setHovered,\n                }}\n                node={stops}\n                h={`calc(100vh - ${vidHeight}px)`}\n              />\n            </GridItem>\n            <GridItem\n              id=\"events\" rowSpan={1} colSpan={1}\n              overflowY=\"scroll\"\n            >\n              <Events\n                {...{\n                  insertChild, insertParent,\n                  duration, replaceNode,\n                  hovered, setHovered,\n                  seekTo,\n                }}\n                node={stops}\n              />\n            </GridItem>\n          </>\n        )}\n        <GridItem\n          id=\"video\"\n          rowSpan={1} colSpan={2}\n          maxH={vidHeight} maxW=\"100vw\"\n        >\n          <Flex maxH=\"100%\" maxW=\"100vw\">\n            <DateTime {...{ startsAt, time }}/>\n            <Video\n              flexGrow={1} controls\n              maxH=\"100%\" maxW=\"calc(100vw - 10em)\"\n              ref={vid}\n            >\n              <source {...{ src, type: 'video/mp4' }} />\n              {/* {VTT && <track default src={VTT}/>} */}\n            </Video>\n            <Flex align=\"center\">\n              <Stack>\n                <Button\n                  title=\"Edit the video information\"\n                  onClick={openVideoSettings}\n                  h=\"auto\"\n                >⚙</Button>\n                <Button\n                  title=\"Download the current configuration\"\n                  onClick={serialize}\n                  h=\"auto\"\n                >⭳</Button>\n              </Stack>\n              <Button\n                title=\"Upload to Ceramic\"\n                onClick={upload}\n              >\n                <Image\n                  minH={25} minW={25}\n                  src={CeramicLogo}\n                />\n              </Button>\n            </Flex>\n          </Flex>\n        </GridItem>\n      </Grid>\n      <Button\n        position=\"absolute\"\n        left=\"50%\" bottom={vidHeight}\n        transform=\"translate(-50%, 50%)\"\n        draggable={true} variant=\"outline\"\n        onDrag={({ clientY: y, target, type }) => {\n          const { height } = (\n            target.getBoundingClientRect()\n          )\n          if(y > 0) { // an event w/ y = 0 fires at the end\n            // ToDo: keep the button on the screen\n            setVidHeight(Math.max(\n              window.innerHeight - y,\n              height,\n            ))\n          }\n        }}\n      >⇅</Button>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport {\n  Heading, Spinner, Stack, UnorderedList, ListItem,\n  Flex, Textarea, Button,\n} from '@chakra-ui/react'\nimport { useLocation } from 'react-router'\nimport MarkedVideo from 'MarkedVideo'\nimport { HashLink as Link } from 'react-router-hash-link'\n\nexport default () => {\n  const { pathname: path } = useLocation()\n  const metadata = path.replace(/^\\/?(.+?)\\/?$/, '$1')\n  const [info, setInfo] = useState(null)\n\n  const setFromObject = (json) => {\n    const { video: { startsAt, source }, stops } = (\n      json\n    )\n    setInfo({\n      startsAt: new Date(startsAt), source, stops\n    })\n  }\n\n  useEffect(() => {\n    console.info({ metadata });\n    (async () => {\n      if(metadata.startsWith('ceramic://')) {\n        const CERAMIC_URL = (\n          process.env.CERAMIC_URL\n          || 'http://localhost:7007'\n          || 'https://ceramic-clay.3boxlabs.com'\n        )\n        const ceramic = new Ceramic(CERAMIC_URL)\n        const tile = await (\n          TileDocument.load(ceramic, metadata)\n        )\n        console.info({ metadata, tile: tile.content })\n        setInfo(tile.content)\n      } else if(metadata.startsWith('ipfs://')) {\n        if(metadata.endsWith('.mp4')) {\n          setInfo({\n            startsAt: new Date(),\n            stops: [{\n              title: 'Title',\n            }],\n            source: metadata,\n          })\n        } else if(metadata.endsWith('.json')) {\n          const regex = /^ipfs:(\\/\\/)?(.+)$/i\n          const match = metadata.match(regex)\n          const http = `//ipfs.io/ipfs/${match[2]}`\n          const res = await fetch(http)\n          setFromObject(await res.json())\n        }\n      } else if(metadata !== '/') {\n        setInfo(await import(`./${metadata}/js`))\n      } else {\n        console.warn('No files to load…')\n      }\n    })()\n  }, [metadata])\n\n  if(!info) {\n    return (\n      <Stack align=\"center\" mt={10}>\n        {metadata === '/' ? (\n          <UnorderedList>\n            <ListItem>\n              <Link\n                to=\"ipfs://Qmeiz7YmwtVYMRSUG3VdKTxU634JTPaB5j2xLj5RREqAkG/2021⁄10⁄06@09:56:54.MetaGame’s%20Builders’%20Align.x264.mp4\"\n              >Builders’ Align Video</Link>\n            </ListItem>\n            <ListItem>\n              <Link\n                to=\"ipfs://QmRrVhS5KZ4372vSb48sv7xBThZvnLuv4jQpVmyfzkQpEP/Sample Builders’ Align.json\"\n              >Builders’ Align w/ Metadata</Link>\n            </ListItem>\n          </UnorderedList>\n        ) : (\n          <>\n            <Heading size=\"sm\">{metadata}</Heading>\n            <Spinner/>\n          </>\n        )}\n        <Flex\n          as=\"form\" direction=\"column\"\n          onSubmit={(evt) => {\n            evt.preventDefault()\n            setFromObject(\n              JSON.parse(evt.target.json.value)\n            )\n          }}\n        >\n          <Textarea\n            name=\"json\" placeholder=\"JSON Events Description\"\n            w={600} h={30}\n          ></Textarea>\n          <Button type=\"submit\">Load JSON</Button>\n        </Flex>\n      </Stack>\n    )\n  }\n\n  const { title, stops, source, startsAt } = info\n  return <MarkedVideo {...{\n    title, stops, source, startsAt,\n  }}/>\n}","import ThreeIdResolver from '@ceramicnetwork/3id-did-resolver'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { IDX } from '@ceramicstudio/idx'\nimport { DID } from 'dids'\nimport {\n  ThreeIdConnect, EthereumAuthProvider,\n} from '@3id/connect'\nimport {\n  Box, Button, Flex, FormControl, FormLabel, IconButton,\n  Input, ListItem, Modal, ModalBody, ModalCloseButton,\n  ModalContent, ModalFooter, ModalHeader, ModalOverlay,\n  Stack, Tab, TabList, TabPanel, TabPanels, Tabs,\n  UnorderedList, useDisclosure,\n} from '@chakra-ui/react'\nimport { DeleteIcon } from '@chakra-ui/icons'\nimport Markdown from 'react-markdown'\nimport { useEffect, useState, useMemo } from 'react'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { create as ipfsHTTPClient } from 'ipfs-http-client'\n\nimport ids from 'ceramicIds.json'\nimport V1 from 'w/MetaGame’s Builders/on/-3/♌/1/@/1/27/‒/1/77/js'\nimport V2 from 'w/Raid Guild/on/0/♈/15/@/9/13/‒/9/52/js'\n\nconst CERAMIC_URL = (\n  process.env.CERAMIC_URL\n  || 'https://clay-ceramic.3boxlabs.com'\n  || 'http://localhost:7007'\n  || 'https://d12-a-ceramic.3boxlabs.com'\n)\nconst IPFS_URL = (\n  process.env.REACT_APP_IPFS_URI ?? '/ip4/127.0.0.1/tcp/5001'\n)\n\nconst DEF = ids.definitions.ConsultVideoIndex\n\nconst NewVideoModal = ({\n  isOpen, onClose, setVideos, ceramic, idx, ipfs,\n}) => {\n  const [startTime/*, setStartTime*/] = (\n    useState((new Date()).toISOString())\n  )\n  const [title/*, setTitle*/] = useState('')\n  const [url/*, setURL*/] = useState('')\n  const [tabIndex/*, setTabIndex*/] = useState(0)\n  const [creating, setCreating] = useState(null)\n\n  const video = async () => {\n    setCreating('Starting')\n    const video = { startTime, title }\n    if(tabIndex === 0) {\n      video.url = url\n    } else {\n      ipfs.add()\n    }\n    const anchorless = video.title.replace(\n      /\\[([^\\]]+)\\]\\([^)]+\\)/g, (_str, $1) => $1\n    )\n    const id = `${video.startTime}: ${anchorless}`\n    setCreating('Checking IDX for Index')\n    const videos = (await idx.get(DEF)) ?? {}\n    let tile\n    if(videos[id]) {\n      setCreating('Loading Existing Tile')\n      tile = await TileDocument.load(ceramic, videos[id])\n      console.info('Existing', tile.id.toUrl())\n    } else {\n      setCreating('Creating New Tile')\n      tile = (await TileDocument.create(\n        ceramic,\n        null,\n        {\n          schema: ids.schemas.ConsultVideoMetadata,\n          family: 'Consult Video',\n          controllers: [ceramic.did.id],\n        },\n      ))\n      console.info('created', tile.id.toUrl())\n      setCreating('Updating IDX Index')\n      const record = await (\n        idx.merge(DEF, { [id]: tile.id.toUrl() }, { pin: true })\n      )\n      console.info('added', record.toUrl())\n      videos[id] = tile.id.toUrl()\n      setVideos(Object.keys(videos))\n    }\n    setCreating('Updating Video Metadata')\n    await tile.update(video)\n    console.info('updated', id)\n    setCreating(null)\n  }\n\n  return (\n    <Modal {...{ isOpen, onClose }}>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader>New Video</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n        <FormControl>\n            <FormLabel>Title</FormLabel>\n            <Input/>\n          </FormControl>\n          <FormControl>\n            <FormLabel>Start Time</FormLabel>\n            <Input type=\"datetime-local\"/>\n          </FormControl>\n          <Tabs isFitted variant=\"enclosed\">\n            <TabList mb=\"1em\">\n              <Tab>URL</Tab>\n              <Tab>Upload</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <Input placeholder=\"ipfs://…\"/>\n              </TabPanel>\n              <TabPanel>\n                <Input type=\"file\"/>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"ghost\" onClick={onClose}>Cancel</Button>\n          <Button colorScheme=\"blue\" ml={3}>\n            Save\n          </Button>\n          <Button\n            w={72} loadingText={creating}\n            onClick={video}\n            isLoading={!!creating}\n            disabled={creating !== null}\n          />\n\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default () => {\n  const ceramic = useMemo(\n    () => new Ceramic(CERAMIC_URL), []\n  )\n  const idx = useEffect(\n    () => new IDX({ ceramic, autopin: true }),\n    [ceramic],\n  )\n  const ipfs = useMemo(\n    () => new ipfsHTTPClient(IPFS_URL), []\n  )\n  const [videos, setVideos] = useState([])\n  const { isOpen, /*onOpen,*/ onClose } = useDisclosure()\n  \n  // useEffect(() => {\n  //   (async () => {\n  //     const threeIdConnect = new ThreeIdConnect()\n  //     const addresses = await window.ethereum.enable()\n  //     const authProvider = new EthereumAuthProvider(\n  //       window.ethereum, addresses[0]\n  //     )\n  //     await threeIdConnect.connect(authProvider)\n  //     const did = new DID({\n  //       provider: threeIdConnect.getDidProvider(),\n  //       resolver: ThreeIdResolver.getResolver(ceramic)\n  //     })\n  //     await did.authenticate()\n  //     ceramic.did = did\n  //     console.info('DID', did.id)\n  //   })()\n  // }, [])\n\n  // useEffect(() => {\n  //   if(ceramic && idx) {\n  //     (async () => {\n  //       const videos = await idx.get(DEF)\n  //       console.info('SET VIDS', videos)\n  //       setVideos(Object.keys(videos))\n  //     })()\n  //   }\n  // }, [ceramic, idx, DEF])\n\n  const remove = async (id) => {\n    const videos = (await idx.get(DEF)) ?? {}\n    if(!videos[id]) {\n      console.warn('Removing Nonexistent Id', id)\n    }\n    delete videos[id]\n    console.info({ videos }, Object.keys(videos))\n    await idx.set(DEF, videos)\n    console.info('SET', [])\n    setVideos([])\n  }\n\n  const loadVideos = async () => {\n    const CERAMIC_URL = (\n      process.env.CERAMIC_URL\n      || 'http://localhost:7007'\n      || 'https://ceramic-clay.3boxlabs.com'\n    )\n    const ceramic = new Ceramic(CERAMIC_URL)\n    const idx = new IDX({ ceramic, autopin: true })\n    const threeIdConnect = new ThreeIdConnect()\n    const addresses = await window.ethereum.enable()\n    console.info('adrs', addresses)\n    const authProvider = new EthereumAuthProvider(\n      window.ethereum, addresses[0]\n    )\n    await threeIdConnect.connect(authProvider)\n    const did = new DID({\n      provider: threeIdConnect.getDidProvider(),\n      resolver: ThreeIdResolver.getResolver(ceramic),\n    })\n    await did.authenticate()\n    ceramic.did = did\n    console.info(ceramic.did.id)\n\n    const metas = Object.fromEntries(\n      await Promise.all(\n        [V1, V2].map(async (video) => {\n          const anchorless = video.title.replace(\n            /\\[([^\\]]+)\\]\\([^)]+\\)/g, (_str, $1) => $1\n          )\n          const id = `${video.startTime}: ${anchorless}`\n          const tile = (await TileDocument.create(\n            ceramic,\n            video,\n            {\n              schema: ids.schemas.ConsultVideoMetadata,\n              family: 'Consult Video',\n              controllers: [ceramic.did.id],\n            },\n          ))\n          return [id, tile.id.toUrl()]\n        })\n      )\n    )\n    idx.set(\n      ids.definitions.ConsultVideoIndex,\n      metas,\n    )\n    console.info(metas)\n  }\n\n  return (\n    <Box align=\"center\" mt={10}>\n      <Stack maxW=\"50rem\" align=\"center\">\n        <Button\n          w={72}\n          // onClick={onOpen}\n          onClick={loadVideos}\n          //disabled={!ceramic || !idx}\n        >\n          New Video\n        </Button>\n        <UnorderedList>\n          {videos.map((vid) => (\n            <ListItem key={vid}><Flex justify=\"center\">\n              <Markdown>{vid}</Markdown>\n              <IconButton\n                aria-label=\"Remove\" icon={<DeleteIcon/>}\n                size=\"sm\" ml={5} onClick={() => remove(vid)}\n              />\n            </Flex></ListItem>\n          ))}\n        </UnorderedList>\n      </Stack>\n      <NewVideoModal {...{\n        isOpen, onClose, ceramic, idx, ipfs,\n      }}/>\n    </Box>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Heading, ListItem, Spinner, Stack, UnorderedList } from \"@chakra-ui/react\";\nimport { ethers } from 'ethers'\nimport Ceramic from '@ceramicnetwork/http-client'\nimport { IDX } from '@ceramicstudio/idx'\nimport { DID } from 'dids'\nimport {\n  ThreeIdConnect, EthereumAuthProvider,\n} from '@3id/connect'\nimport ThreeIdResolver from '@ceramicnetwork/3id-did-resolver'\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link'\nimport info from 'contract/address.json'\nimport abi from 'contract/abi/IDXEndpointPublisher.json'\nimport ceramicIds from 'ceramicIds.json'\nimport { useEffect, useCallback, useMemo, useState } from 'react'\n\nexport default () => {\n  const [docs, setDocs] = useState(null)\n  const provider = useMemo(() => (\n    new ethers.providers.JsonRpcProvider(\n      'https://polygon-mumbai.infura.io/v3/7ba21f9ee8d2422da87d1c35bcead48b'\n    )),\n    []\n  )\n  const ensProvider = useMemo(() => (\n    new ethers.providers.JsonRpcProvider(\n      'https://mainnet.infura.io/v3/7ba21f9ee8d2422da87d1c35bcead48b'\n    )),\n    []\n  )\n  const contract = useMemo(() => (\n    new ethers.Contract(info.address, abi, provider)\n    ),\n    [provider]\n  )\n\n  const events = useCallback(async () => {\n    const [address] = await window.ethereum.enable()\n    const filter = contract.filters.CAIP_10()\n    const events = await contract.queryFilter(filter, -90000)\n    const addrs = [...new Set(\n      ...events.map(\n        ({ args: { caip10: addr } }) => addr\n      ),\n      [`eip155:1:${address}`],\n    )]\n\n    const CERAMIC_URL = (\n      process.env.CERAMIC_URL\n      || 'http://localhost:7007'\n      || 'https://ceramic-clay.3boxlabs.com'\n    )\n    const ceramic = new Ceramic(CERAMIC_URL)\n    const idx = new IDX({ ceramic, autopin: true })\n    const threeIdConnect = new ThreeIdConnect()\n    const authProvider = new EthereumAuthProvider(\n      window.ethereum, address\n    )\n    await threeIdConnect.connect(authProvider)\n    const did = new DID({\n      provider: threeIdConnect.getDidProvider(),\n      resolver: ThreeIdResolver.getResolver(ceramic),\n    })\n    await did.authenticate()\n    ceramic.did = did\n\n    console.info({ addrs, address })\n\n    const docs = await Promise.all(\n      addrs.map(async (caip10) => {\n        let id = caip10.toLowerCase()\n        const match = id.match(\n          /^(eip155):(\\d+):(.+)$/\n        )\n        if(match) {\n          id = `${match[3]}@${match[1]}:${match[2]}`\n        }\n        const caip = await (\n          Caip10Link.fromAccount(ceramic, id)\n        )\n        const did = caip.did\n        if(did === null) {\n          throw new Error(`No DID Found for ${id}.`)\n        }\n        const index = await idx.get(\n          ceramicIds.definitions.ConsultVideoIndex,\n          did,\n        )\n        if(index === null) {\n          throw new Error(`No Index of Videos Found for ${did}.`)\n        }\n        const eth = id.replace(/@.*/, '')\n        const ens = await ensProvider.lookupAddress(eth)\n        return (\n          Object.entries(index).map(([title, url]) => ({\n            addr: ens ?? eth,\n            title,\n            url,\n          }))\n        )\n      })\n    )\n    setDocs(docs.flat())\n  }, [contract, ensProvider])\n\n  useEffect(() => events(), [events])\n\n  /*\n  const pub = () => {\n    const caip10 = 'eip155:1:0x615b044b6ccb048532bcf99aadf619d7fdd2aa01'\n    const plusSigner = contract.connect(provider.getSigner())\n    plusSigner.publish(caip10)\n  }\n  */\n \n  return (\n    !docs ? (\n      <Stack align=\"center\" mt={12}>\n        <Heading>Loading…</Heading>\n        <Spinner/>\n      </Stack>\n    ) : (\n      <UnorderedList>\n        {docs.map(({addr, title, url}, idx) => (\n          <ListItem key={idx}><Link to={url}>\n            {addr}: {title}\n          </Link></ListItem>\n        ))}\n      </UnorderedList>\n    )\n  )\n}","import View from 'View'\nimport New from 'New'\nimport ListAvailable from 'ListAvailable'\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom'\n\nexport default () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/new\" component={New}/>\n      <Route path=\"/\" component={View}/>\n      <Route exact path=\"/\" component={ListAvailable}/>\n    </Switch>\n  </Router>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export default {\n  '/': (\n    \"QmbEzZzhqnJmtxoFbaA5fwdjaGN2rucVEkrGCi9o5sX31J/2021-08-04@10:01:40.MetaGame Builders' Align.mp4\"\n  ),\n}","import CID from './cid'\nimport { isoStringFor } from 'utils'\n\n// Should be ذو الحجة, but the bidi isn't cooperating in VS Code\nexport const id = 'tip:w/MetaGame’s Builders/on/1442/Dhuʻl-Hijjah/25/@/1/26/‒/1/77/'\nexport const startTime = new Date('2021-08-04T10:00:30-0400')\nexport const url = `https://ipfs.io/ipfs/${CID['/']}`\nexport const title = (\n  \"Builders' Align for the Week of 1442/12/22 ‒ 28\"\n)\n\nexport const stops = {\n  '01:01': {\n    name: 'Docker Swarm',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '02:16': {\n    name: 'Vercel',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '03:24': {\n    name: 'Service User',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '04:23': {\n    name: \"Rook's Intro\",\n    speakers: ['@Rook', '@Michiel'],\n  },\n  '10:24': {\n    name: 'TomBalls Enters',\n    speakers: ['@dysbulic', '@Michiel'],\n  },\n  '11:55': {\n    name: 'dan13ram Enters',\n    speakers: ['@dan13ram', '@Michiel'],\n  },\n  '12:19': {\n    name: 'Call Starts',\n    speakers: ['@Michiel'],\n  },\n  '12:34': {\n    name: 'b0gie Presents',\n    speakers: ['@b0gie'],\n  },\n  '14:38': {\n    name: 'TomBalls Presents',\n    speakers: ['@TomBalls'],\n  },\n  '16:28': {\n    name: 'Rook Presents',\n    speakers: ['@Rook'],\n  },\n  '17:58': {\n    name: 'Service User Done',\n  },\n  '18:31': {\n    name: 'jonathanp Presents',\n    speakers: ['@jonathanp'],\n  },\n  '19:05': {\n    name: \"googoomuck Doesn't Present\",\n    speakers: ['@Michiel'],\n  },\n  '19:29': {\n    name: 'dysbulic Presents',\n    speakers: ['@dysbulic'],\n  },\n  '23:02': {\n    name: 'dan13ram Presents',\n    speakers: ['@dan13ram'],\n  },\n  '32:52': {\n    name: 'arentweall Presents',\n    speakers: ['@arentweall'],\n  },\n  '34:05': {\n    name: 'Bagholder McFomo Presents',\n    speakers: ['@Bagholder McFomo'],\n  },\n  '38:05': {\n    name: 'Michiel Presents',\n    speakers: ['@Michiel'],\n  },\n  '42:38': {\n    name: 'pΞTH Presents',\n    speakers: [\"@peth don't need your eth\"],\n  },\n  '51:16': {\n    name: \"SoureCred's Meeting Channels\",\n    speakers: ['@Michiel'],\n  },\n  '53:55': {\n    name: 'Curious & Engaged Work',\n    speakers: [\"@peth don't need your eth\", '@Michiel', '@dysbulic', '@TomBalls'],\n  },\n  '01:00:05': {\n    name: 'stepan Presents',\n    speakers: ['@stepan'],\n  }\n}\n\nexport default {\n  title,\n  startTime: isoStringFor(startTime),\n  source: url,\n  stops,\n}","const props = [\n  { bg: '#19FF20' },\n  { bg: '#FF0000BB' },\n  { bg: 'pink' },\n  { bg: 'blue', color: 'white' },\n  { bg: 'orange' },\n  { bg: 'green', color: 'white' },\n  { bg: 'teal', color: 'white' },\n  { bg: 'purple', color: 'white' },\n  { bg: 'darkgray', color: 'white' },\n  { bg: 'cyan' },\n  { bg: 'black', color: 'red' },\n]\nconst proppedTags = []\nexport const propsFor = (info) => {\n  const search = info.tags?.[0] ?? info.speakers?.[0]\n  if(!search) return { bg: 'orange' }\n\n  let idx = proppedTags.indexOf(search)\n  if(idx < 0) {\n    idx = proppedTags.length\n    proppedTags.push(search)\n  }\n  idx = idx % props.length\n  return props[idx]\n}\n\nexport const isSet = (value) => (\n  Boolean(value) || value === 0\n)\n\nexport const ifSet = (value, { default: def } = {}) => (\n  isSet(value) ? value : def\n)\n\nexport const durationFor = (str) => {\n  if(typeof str !== 'string') {\n    throw new Error(`Bad Argument: expected string, got ${typeof str}`)\n  }\n  const [from, to = from] = str.split('‒').map(timeFor)\n  return {\n    startsOffset: from,\n    duration: to - from,\n  }\n}\n\nexport const timeFor = (str, { default: def } = {}) => (\n  !isSet(str) ? def : (\n    (() => {\n      str = str.toString()\n      const [secondsStr, minutesStr, hoursStr, ...rest] = (\n        str.split(':').reverse()\n      )\n      if(rest.length >= 1) {\n        console.warn(`Got [${rest}] extraneous parameters in ${str}.`)\n      }\n      let [seconds, minutes, hours] = ([\n        parseFloat(ifSet(secondsStr) ?? 0 ),\n        parseInt(ifSet(minutesStr) ?? 0),\n        parseInt(ifSet(hoursStr) ?? 0),\n      ])\n      minutes += hours * 60\n      return seconds + minutes * 60\n    })()\n  )\n)\n\nexport const stringFor = (\n  (time, { default: def, milliseconds = true } = {}) => {\n    if(!isSet(time)) return def\n\n    const sign = time < 0 ? '−' : ''\n    const hours = Math.floor(Math.abs(time / (60 * 60)))\n    const minutes = (\n      Math.floor(Math.abs((time % (60 * 60)) / 60))\n    )\n    const seconds = Math.floor(Math.abs(time % 60))\n    const mss = (\n      Math.abs(time) - Math.floor(Math.abs(time))\n    )\n\n    if(\n      ![hours, minutes, seconds, mss].reduce(\n        (acc, num) => acc && !isNaN(num),\n        true\n      )\n    ) {\n      return def\n    }\n\n    let [msStr] = (\n      mss.toFixed(4).split('.').slice(-1)\n    )\n    msStr = msStr.replace(/0+$/, '')\n\n    return (\n      `${sign}${\n        hours > 0 ? (\n          `${hours}:${minutes.toString().padStart(2, '0')}`\n        ) : (\n          minutes\n        )\n      }:${\n        seconds.toString().padStart(2, '0')\n      }${\n        (!milliseconds || msStr === '') ? '' : `.${msStr}`\n      }`\n    )\n  }\n)\n\nexport const isoStringFor = (date, opts = {}) => {\n  const tzo = -date.getTimezoneOffset()\n  const dif = tzo >= 0 ? '+' : '-'\n  const pad = (num) => {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? '0' : '') + norm;\n  }\n  const { dateSeparator: sep = '-' } = opts\n\n  let ret = ''\n  if(opts.date !== false) {\n    ret += (\n      date.getFullYear()\n      + sep + pad(date.getMonth() + 1)\n      + sep + pad(date.getDate())\n    )\n    if(opts.time !== false) {\n      ret += 'T'\n    }\n  }\n  if(opts.time !== false) {\n    ret += (\n      pad(date.getHours())\n      + ':' + pad(date.getMinutes())\n    )\n    if(opts.seconds ?? true) {\n      ret += ':' + pad(date.getSeconds())\n    }\n    if(opts.tz !== false) {\n      ret += `​(ᴜᴛᴄ${dif}${Math.abs(tzo / 60)}`\n      if((opts.tzMinutes ?? true) || tzo % 60 !== 0) {\n        ret += ':' + pad(tzo % 60)\n      }\n      ret += ')'\n    }\n  }\n  return ret\n}","export default {\n  '/': (\n    'QmZKXnvufBf2ZFEVqF78LPbfdEceShZ5QPubSjEViYWZ5X'\n  ),\n}","import CID from './cid'\nimport { isoStringFor } from 'utils'\n\nexport const startTime = new Date('2021-04-25T21:55:37-0400')\nexport const url = `https://ipfs.io/ipfs/${CID['/']}`\nexport const title = 'Raid Guild Initial Consultation Call w/ @joshsdoug'\n\nexport const stops = {\n  '00:00': {\n    name: 'Musical Intro',\n    tags: ['skippable']\n  },\n  '08:45': {\n    name: 'High Volume',\n    tags: ['chatter'],\n  },\n  '09:30': {\n    name: 'Blood Pressure',\n    tags: ['BP'],\n  },\n  '10:37': {\n    name: 'Bleeding Edge',\n    tags: ['pertinent'],\n  },\n  '13:06': {\n    name: 'Ceramic',\n    tags: ['pertinent'],\n  },\n  '15:26': {\n    name: 'Jitsi',\n    tags: ['logistics'],\n  },\n  '17:40': {\n    name: 'Call me “Δυς”.',\n    tags: ['personal'],\n  },\n  '18:04': {\n    name: 'Blood Pressure',\n    tags: ['BP'],\n  },\n  '18:50': {\n    name: 'Reread',\n    tags: ['skippable'],\n  },\n  '19:32': {\n    name: 'Peyote',\n    tags: ['BP'],\n  },\n  '20:16': {\n    name: 'Fractured',\n    tags: ['skippable'],\n  },\n  '20:54': {\n    name: 'BP Persistence',\n    tags: ['BP'],\n  },\n  '22:48': {\n    name: 'Reschedule',\n    tags: ['logistics'],\n  },\n  '24:06': {\n    name: 'Jitsi Found',\n    tags: ['logistics'],\n  },\n  '24:45': {\n    name: 'Stretch Goals',\n    tags: ['skippable'],\n  },\n  '25:45': {\n    name: 'Anarchism',\n    tags: ['pertinent'],\n  },\n  '26:45': {\n    name: 'Passed',\n    tags: ['personal'],\n  },\n  '28:23': {\n    name: 'Triage List',\n    tags: ['tangential'],\n  },\n  '30:08': {\n    name: 'Scattered',\n    tags: ['skippable'],\n  },\n  '33:29': {\n    name: 'Français',\n    tags: ['logistics'],\n  },\n  '35:15': {\n    name: \"Odin's Eye\",\n    tags: ['pertinent'],\n  },\n  '35:41': {\n    name: 'Hard Stop',\n    tags: ['logistics'],\n  },\n  '36:20': {\n    name: 'BP Resolution',\n    tags: ['BP'],\n  },\n  '36:43': {\n    name: 'Pairing Partners',\n    tags: ['pertinent'],\n  },\n  '37:21': {\n    name: 'Beggars in Spain',\n    tags: ['recommendation'],\n  },\n  '37:27': {\n    name: 'Ancillae',\n    tags: ['skippable'],\n  },\n  '37:53': {\n    name: 'Kubernetes',\n    tags: ['pertinent'],\n  },\n  '38:38': {\n    name: 'BP Mindlessness',\n    tags: ['BP'],\n  },\n  '40:00': {\n    name: 'Render Tree',\n    tags: ['algorithm'],\n  },\n  '41:25': {\n    name: (\n      '[Donnie Darko](https://ipfs.io/ipfs/QmTAdBoj7guxtLroQrdFTHrA1M2vSa37VQZoh4D77rdANc/Donnie.Darko.2001.mp4)'\n    ),\n    tags: ['recommendation'],\n  },\n  '43:42': {\n    name: 'Kinesthetic Reasoning',\n    tags: ['psych'],\n  },\n  '44:19': {\n    name: 'T-minus 5 Minutes',\n    tags: ['logistics'],\n  },\n  '44:52': {\n    name: '¿Will it happen?',\n    tags: ['pitch', 'pertinent'],\n  },\n  '46:27': {\n    name: 'Revolution through Election',\n    tags: ['pertinent'],\n  },\n  '47:22': {\n    name: '¿What year is it?',\n    tags: ['pitch', 'pertinent'],\n  },\n  '49:45': {\n    name: '1968',\n    tags: ['pertinent'],\n  },\n  '50:35': {\n    name: 'Dissatisfied',\n    tags: ['logistics'],\n  },\n  '52:48': {\n    name: '¿Make Sense?',\n    tags: ['pertinent'],\n  },\n  '53:26': {\n    name: \"Inch'allah\",\n    tags: ['logistics'],\n  },\n  '53:34': {\n    name: 'Euthanasia',\n    tags: ['personal'],\n  },\n  '54:04': {\n    name: 'Dead Air',\n    tags: ['skippable'],\n  },\n}\n\nexport default {\n  title,\n  startTime: isoStringFor(startTime),\n  source: url,\n  stops,\n}"],"sourceRoot":""}